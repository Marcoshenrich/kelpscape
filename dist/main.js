/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/denizens/algae.js":
/*!*******************************!*\
  !*** ./src/denizens/algae.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Algae; }\n/* harmony export */ });\n/* harmony import */ var _floater__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./floater */ \"./src/denizens/floater.js\");\n\n\n\nclass Algae extends _floater__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic) {\n        super(ctx, canvas, view, logic)\n        this.id = \"Algae\" + id\n        this.img = new Image()\n        this.img.src = './dist/art/algae.png'\n        this.height = 8\n        this.width = 8\n        this.pos = this.placer()\n        this.bobCoef = Math.floor(Math.random() * 10) + 4\n        this.bobSpeed = (Math.floor(Math.random() * 3) +.1)/30\n        this.trackCoef = 0\n        this.up = [true, false][Math.floor(Math.random() * 2)]\n        this.energyVal = 10\n    }\n\n    placer() {\n        let pos = []\n        pos[0] = Math.floor(Math.random() * this.arenaWidth) - this.width\n        pos[1] = Math.floor(Math.random() * this.arenaHeight / 2) + (this.arenaHeight / 2) - this.height\n        return pos\n    }\n\n    \n\n}\n\n//# sourceURL=webpack://jsproj/./src/denizens/algae.js?");

/***/ }),

/***/ "./src/denizens/crab.js":
/*!******************************!*\
  !*** ./src/denizens/crab.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Crab; }\n/* harmony export */ });\n/* harmony import */ var _crabbaby__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./crabbaby */ \"./src/denizens/crabbaby.js\");\n/* harmony import */ var _deadCreature__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./deadCreature */ \"./src/denizens/deadCreature.js\");\n/* harmony import */ var _swimmer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./swimmer */ \"./src/denizens/swimmer.js\");\n/* harmony import */ var _engine_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../engine/utils */ \"./src/engine/utils.js\");\n\n\n\n\n\n\nclass Crab extends _swimmer__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic, pos) {\n\n        super(ctx, canvas, view, logic)\n\n        this.id = \"Crab\" + id\n        this.spawn = false\n        this.img = new Image()\n        this.img.src = './dist/art/crab.png'\n        this.height = 15\n        this.width = 30\n        this.pos = pos || [Math.floor(Math.random() * this.arenaWidth - this.width), this.arenaHeight - this.height]\n        this.speed = Math.floor(Math.random() * 4)/10\n        this.maxSpeed = .4\n        this.up = false\n        this.right = [true, false][Math.floor(Math.random() * 2)]\n        this.recentlySwitchedDirections = false\n        this.dead = false\n\n        this.timeToClimbSeaweed = false\n        this.onSeaweed = false\n\n        this.seaweedSpots = this.seaweedFinder()\n        this.climbSeaweedTimer()\n\n        this.scavenging = false\n        this.consumptionRate = .005\n        this.recentlyAte = false\n\n        this.maxEnergy = 10\n        this.energy = this.maxEnergy\n        this.fadeThreshold = 5\n        \n\n        this.energyUseCoef = .0007\n        this.matingThreshold = 6\n        this.matingEnergyCost = 3\n        this.mating = false\n        this.carryingEggs = false\n        this.seekingMate = false\n\n        this.trapHeight = 6\n        this.trapWidth = this.width\n        this.trapPos = this.pos\n        this.trappedPrey = false\n\n        this.totalEnergyConsumed = 0\n    }\n\n\n    climbSeaweedTimer() {\n        setTimeout(() => {\n            this.timeToClimbSeaweed = !this.timeToClimbSeaweed\n            this.climbSeaweedTimer()\n        }, Math.floor(Math.random() * (this.timeToClimbSeaweed ? 60000 : 30000)))\n    }\n\n    seaweedFinder() {\n        let seaweedSpots = {}\n        Object.values(this.logic.seaweedClusters).forEach((seaweedCluster) => {\n            seaweedSpots[(seaweedCluster.pos[0]) + this.width + (0,_engine_utils__WEBPACK_IMPORTED_MODULE_3__.rand)(-4,4)] = seaweedCluster\n        })\n        return seaweedSpots\n    }\n\n    movementSwitchTimer() {\n        setTimeout(() => {\n            this.timeToSwitchMovement = true\n            this.movementSwitchTimer()\n        }, Math.floor(Math.random() * 2500) + 7000)\n    }\n\n    coreloop() {\n        if (this.trappedPrey) {\n            this.consumeFod(this.trappedPrey, \"trapped\")\n        } else if (this.scavenging) {\n            this.consumeFod(this.scavenging, \"scavenge\")\n        }\n        if (!this.scavenging) this.move()\n\n        this.consumeEnergy()\n        this.behaviorChanger()\n        this.draw()\n        // if (this.view.gameFrame % 10 !== 0) return\n        if (this.dead && !(this.spawn && this.totalEnergyConsumed > this.growUpThreshold)) this.logic.denizenCorpse(this)\n        \n\n    } \n\n    behaviorChanger(){\n        if (!this.spawn && !this.seekingMate && this.energy > this.matingThreshold && this.recentlyAte && !this.carryingEggs) {\n            this.logic.matingDenizensObj[this.id] = this\n            this.seekingMate = true\n        } else if (!this.spawn && this.seekingMate && this.energy < this.matingThreshold) {\n            delete this.logic.matingDenizensObj[this.id]\n            this.seekingMate = false\n        }\n    }\n\n    mate(spawnBool) {\n        this.mating = true\n        this.seekingMate = false\n        this.speed = 0\n        this.energy -= this.matingEnergyCost\n    \n        let baseId = setTimeout(() => {\n            this.speed += .2\n            this.mating = false\n            if (spawnBool) return\n            this.carryingEggs = true\n            this.img.src = './dist/art/crabdad.png'\n\n            let secId = setTimeout(() => {\n                if (this.trapped) return\n                this.img.src = './dist/art/crab.png'\n                this.carryingEggs = false\n                let i = Math.floor(Math.random() * 3) + 2\n                while (i > 0) {\n                    i--\n                    this.logic.spawnDenizen(this)\n                }\n            },30000)\n            this.clearOnDeath.push(secId)\n\n        }, 3000)\n\n        this.clearOnDeath.push(baseId)\n    }\n\n    consumeFod(foodSource, foodType) {\n        this.energy = Math.min(this.maxEnergy, this.energy + this.consumptionRate)\n        if (foodType === \"scavenge\") {\n            foodSource.energyVal -= this.consumptionRate\n            if (foodSource.pos[1] > this.pos[1] + this.height ) this.scavenging = false\n        } else {\n            foodSource.energy -= this.consumptionRate\n        }\n        \n        this.totalEnergyConsumed += this.consumptionRate\n        if (foodSource.dead) {\n            this.speed = .3\n            foodType === \"scavenge\" ? this.scavenging = false : this.trappedPrey = false\n        }\n\n        if (this.spawn && this.totalEnergyConsumed > this.growUpThreshold) {\n            this.growUp()\n            \n        }\n\n        if (!this.recentlyAte && !this.scavenging) {\n            this.recentlyAte = true\n            setTimeout(() =>  this.recentlyAte = false, 10000) \n        }\n    }\n\n    consumeEnergy() {\n\n        this.energy -= this.energyUseCoef * this.speed\n        if (this.energy < .01) {\n            this.dead = true\n            this.logic.recentlyDeadDenizens.push(this)\n        }\n\n    }\n\n\n    draw(){\n        this.ctx.globalAlpha = this.energy > this.fadeThreshold ? 1 : (this.energy + Math.abs(this.fadeThreshold - 10)) / 10\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n        this.ctx.globalAlpha = 1\n\n        if (this.mating) this.ctx.drawImage(this.mateHeart, this.pos[0] + 8.5 + this.offset[0], this.pos[1] + this.offset[1] - 17, 15, 15)\n\n        if (this.view.debugging) {\n            this.ctx.fillStyle = 'rgba(255,255,255,1)';\n            this.ctx.font = \"12px serif\";\n            this.ctx.fillText(`${this.id}`, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1])\n            this.ctx.fillText(`[${Math.floor(this.pos[0])},${Math.floor(this.pos[1])}]`, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1] - this.height)\n            this.ctx.fillRect(this.trapPos[0] + this.offset[0], this.trapPos[1] + this.offset[1], this.trapWidth, this.trapHeight)\n        }\n        \n    }\n\n\n    travelLand() {\n\n        if (this.pos[0] > this.arenaWidth - this.width || this.pos[0] < 0) {\n            this.switchDirections()\n        }\n\n        if (this.pos[1] + this.height > this.arenaHeight) this.pos[1] = this.arenaHeight - this.height \n\n        if (this.right) {\n            this.pos[0] += this.speed\n        } else {\n            this.pos[0] -= this.speed\n        }\n    }\n\n\n    climbSeaweed(climbBool) {\n        if (climbBool) {\n            if (this.pos[1] < this.onSeaweed.tallestPoint + this.height || this.pos[1] > this.arenaHeight - this.height) {\n                this.switchDirections()\n            }\n\n            if (!this.right) {\n                this.pos[1] += this.speed\n            } else {\n                this.pos[1] -= this.speed\n            }\n            return\n        }\n\n        this.pos[1] += this.speed\n        if (this.pos[1] > this.arenaHeight - this.height) {\n            this.onSeaweed = false\n        }\n    }\n\n\n\n\n\n\n\n    move() {\n        if (this.trapped) {\n            this.pos[0] = this.trapped[0] - this.trappedPosDelta[0]\n            this.pos[1] = this.trapped[1] - this.trappedPosDelta[1]\n            return\n        }\n        \n        if (this.mating) return\n        if (!this.onSeaweed && this.timeToClimbSeaweed && (Math.floor(this.pos[0]) in this.seaweedSpots) ) {\n            this.onSeaweed = this.seaweedSpots[Math.floor(this.pos[0])]\n        }\n\n        if (this.onSeaweed && !this.timeToClimbSeaweed) {\n            this.climbSeaweed(false)\n            return\n        }\n\n        if (this.onSeaweed) {\n            this.climbSeaweed(true)\n        } else {\n            this.travelLand()\n        }\n\n        if (this.timeToSwitchMovement) {\n            Object.values(this.movementSwitches)[Math.floor(Math.random() * Object.values(this.movementSwitches).length)]()\n            this.timeToSwitchMovement = false\n        }\n        \n    }\n\n    movementSwitches = {\n\n        reverseSide: () => {\n            this.right = !this.right;\n        },\n\n        reverseSide2: () => {\n            this.right = !this.right;\n        },\n\n        speedUp: () => {\n            if (this.speed < this.maxSpeed) this.speed += .05\n        },\n\n        slowDown: () => {\n            if (this.speed > .1) this.speed -= .05\n        },\n\n        chill: () => {\n            this.speed = 0\n            setTimeout(()=>{\n                this.speed = .3\n            },Math.floor(Math.random() * 9000) +  1000)\n        }\n    }\n\n    switchDirections() {\n        if (this.recentlySwitchedDirections) return\n        this.right = !this.right;\n        this.recentlySwitchedDirections = true\n        setTimeout(() => { this.recentlySwitchedDirections = false }, 350)\n    }\n\n\n\n\n}\n\n\n\n//# sourceURL=webpack://jsproj/./src/denizens/crab.js?");

/***/ }),

/***/ "./src/denizens/crabbaby.js":
/*!**********************************!*\
  !*** ./src/denizens/crabbaby.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CrabBaby; }\n/* harmony export */ });\n/* harmony import */ var _engine_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine/utils */ \"./src/engine/utils.js\");\n/* harmony import */ var _crab__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crab */ \"./src/denizens/crab.js\");\n\n\n\n\nclass CrabBaby extends _crab__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic, pos) {\n        super(id, ctx, canvas, view, logic)\n        this.id = \"CrabBaby\" + id\n        this.spawn = true\n        this.img = new Image()\n        this.img.src = './dist/art/crab.png'\n        this.height = 7.5\n        this.width = 15\n        this.pos = [pos[0] + (0,_engine_utils__WEBPACK_IMPORTED_MODULE_0__.miniRandomizer)(), this.arenaHeight - this.height]\n        this.speed = Math.floor(Math.random() * 4) / 20\n        this.maxSpeed = .25\n\n        this.consumptionRate = .002\n        this.growUpThreshold = 1\n\n        this.maxEnergy = 5\n        this.energy = this.maxEnergy\n        this.energyUseCoef = .0007\n        this.fadeThreshold = 2.5\n\n        this.trapHeight = 3\n        this.trapWidth = this.width\n \n    }\n\n    growUp() {\n        this.dead = true\n        this.logic.recentlyDeadDenizens.push(this)\n        this.logic.spawnDenizen(this) \n    }\n\n}\n\n\n\n//# sourceURL=webpack://jsproj/./src/denizens/crabbaby.js?");

/***/ }),

/***/ "./src/denizens/deadCreature.js":
/*!**************************************!*\
  !*** ./src/denizens/deadCreature.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DeadCreature; }\n/* harmony export */ });\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./denizen */ \"./src/denizens/denizen.js\");\n/* harmony import */ var _crabbaby__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crabbaby */ \"./src/denizens/crabbaby.js\");\n/* harmony import */ var _crab__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./crab */ \"./src/denizens/crab.js\");\n/* harmony import */ var _fish__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fish */ \"./src/denizens/fish.js\");\n/* harmony import */ var _fishbaby__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fishbaby */ \"./src/denizens/fishbaby.js\");\n/* harmony import */ var _shark__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shark */ \"./src/denizens/shark.js\");\n\n\n\n\n\n\n\nclass DeadCreature extends _denizen__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(id, ctx, canvas, view, logic, pos, deadDenizen) {\n        super(ctx, canvas, view, logic)\n        this.id = \"DeadCreature\" + id\n        this.pos = [pos[0], pos[1]]\n        this.driftSpeed = .2\n        this.img = new Image()\n        this.deadDenizen = deadDenizen\n        this.width;\n        this.height;\n        this.energyVal;\n        this.typeSelector()\n        this.dead = false\n    }\n\n    coreloop() {\n        if (this.pos[1] < this.arenaHeight - this.height) this.pos[1] += this.driftSpeed\n        this.draw()\n        if (this.energyVal < 0) {\n            this.dead = true\n            this.logic.recentlyDeadDenizens.push(this)\n        }\n    }\n\n    draw() {\n        this.ctx.globalAlpha = this.energyVal > 5 ? 1 : (this.energyVal + 5) / 10\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n        this.ctx.globalAlpha = 1\n\n        if (this.view.debugging) {\n            this.ctx.fillStyle = 'rgba(255,255,255,1)';\n            this.ctx.font = \"12px serif\";\n            this.ctx.fillText(`${this.energyVal}`, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1])\n            this.ctx.fillText(`[${Math.floor(this.pos[0])},${Math.floor(this.pos[1])}]`, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1] - this.height)\n\n        }\n    }\n\n\n    typeSelector() {\n        switch (this.deadDenizen.constructor) {\n            case _shark__WEBPACK_IMPORTED_MODULE_5__[\"default\"]:\n                this.img.src = './dist/art/sharkdead.png'\n                this.width = 100\n                this.height = 30\n                this.energyVal = 40\n                break\n\n            case _fishbaby__WEBPACK_IMPORTED_MODULE_4__[\"default\"]:\n                this.img.src = './dist/art/fishdead.png'\n                this.width = 12\n                this.height = 8\n                this.energyVal = 5\n                break\n\n            case _fish__WEBPACK_IMPORTED_MODULE_3__[\"default\"]:\n                this.img.src = './dist/art/fishdead.png'\n                this.width = 25\n                this.height = 15\n                this.energyVal = 10\n                break\n\n            case _crab__WEBPACK_IMPORTED_MODULE_2__[\"default\"]:\n                this.img.src = './dist/art/crabdead.png'\n                this.width = 30\n                this.height = 15\n                this.energyVal = 5\n                break\n\n            case _crabbaby__WEBPACK_IMPORTED_MODULE_1__[\"default\"]:\n                this.img.src = './dist/art/crabdead.png'\n                this.width = 15\n                this.height = 7\n                this.energyVal = 2.5\n                break\n\n            default: \n                this.img.src = './dist/art/fishdead.png'\n        }\n\n    }\n\n\n}\n\n//# sourceURL=webpack://jsproj/./src/denizens/deadCreature.js?");

/***/ }),

/***/ "./src/denizens/denizen.js":
/*!*********************************!*\
  !*** ./src/denizens/denizen.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Denizen; }\n/* harmony export */ });\nclass Denizen {\n\n    constructor(ctx, canvas, view, logic) {\n        this.ctx = ctx\n        this.canvas = canvas\n        this.view = view\n        this.logic = logic\n        this.dead = false\n        this.arenaHeight = this.view.arenaHeight\n        this.arenaWidth = this.view.arenaWidth\n        this.offset = this.view.offset\n\n        this.mateHeart = new Image()\n        this.mateHeart.src = './dist/art/red-heart.png'\n\n        this.clearOnDeath = []\n        this.trapped = false\n        this.trappedPosDelta = []\n    }\n\n    clearCallbacksOnDeath() {\n        this.clearOnDeath.forEach((timerId)=>{\n            clearTimeout(timerId)\n        })\n    }\n\n    afterIEatCB() {\n\n    }\n\n    afterITrapCB() {\n\n    }\n\n}\n\n\n//# sourceURL=webpack://jsproj/./src/denizens/denizen.js?");

/***/ }),

/***/ "./src/denizens/effect.js":
/*!********************************!*\
  !*** ./src/denizens/effect.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Effect; }\n/* harmony export */ });\n\n\nclass Effect {\n    constructor(id, type, pos, ctx, canvas, view) {\n        this.id = \"Effect\" + id\n        this.type = type\n        this.pos = pos\n        this.ctx = ctx\n        this.canvas = canvas\n        this.view = view\n        this.size = 10\n        this.coef1 = 0\n        this.coef2 = 0\n        this.dead = false\n    }\n\n    coreloop() {\n        switch(this.type) {\n            case \"bloodSpurt\":\n                this.bloodSpurt()\n                break\n\n            default:\n                return\n        }\n\n    }\n\n    bloodSpurt() {\n        this.ctx.fillStyle = 'rgba(255,0,0,1)';\n        this.ctx.fillRect(this.pos[0] + this.coef1 + this.view.offset[0], this.pos[1] + this.coef2 + this.view.offset[1], this.size, this.size)\n        this.ctx.fillRect(this.pos[0] + this.coef1 + this.view.offset[0], this.pos[1] - this.coef2 + this.view.offset[1], this.size, this.size)\n        this.ctx.fillRect(this.pos[0] - this.coef1 + this.view.offset[0], this.pos[1] + this.coef2 + this.view.offset[1], this.size, this.size)\n        this.ctx.fillRect(this.pos[0] - this.coef1 + this.view.offset[0], this.pos[1] - this.coef2 + this.view.offset[1], this.size, this.size)\n        this.coef1 += .7\n        this.coef2 += .7\n        this.size -= .3\n        if (this.size < 0) {\n            this.dead = true\n            this.view.logic.recentlyDeadDenizens.push(this)\n        }\n    }\n\n    clearCallbacksOnDeath(){\n        //prevents breaking on logic deathloop\n    }\n\n}\n\n//# sourceURL=webpack://jsproj/./src/denizens/effect.js?");

/***/ }),

/***/ "./src/denizens/fish.js":
/*!******************************!*\
  !*** ./src/denizens/fish.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Fish; }\n/* harmony export */ });\n/* harmony import */ var _fishegg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fishegg */ \"./src/denizens/fishegg.js\");\n/* harmony import */ var _swimmer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./swimmer */ \"./src/denizens/swimmer.js\");\n/* harmony import */ var _engine_textbox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../engine/textbox */ \"./src/engine/textbox.js\");\n\n\n\n\n\nclass Fish extends _swimmer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic, pos) {\n        super(ctx, canvas, view, logic)\n        this.spawn = false\n        this.textBox = new _engine_textbox__WEBPACK_IMPORTED_MODULE_2__[\"default\"](ctx, canvas, view, logic, \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur ? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur ?\")\n        this.id = \"Fish\" + id\n        this.leftImg.src = './dist/art/fishleft.png'\n        this.rightImg.src = './dist/art/fishright.png'\n        this.speed = (Math.floor(Math.random() * 5) + 1) / 10\n        this.width = 25\n        this.height = 16\n        this.pos = pos || this.placer()\n        this.oldPos = this.pos\n        this.mouthSize = 8\n        this.mouthPos = this.mouthPlacer()\n        this.movement1 = this.moveSelector()\n        this.movement2 = this.moveSelector()\n        this.moveChangerOne()\n        this.moveChangerTwo()\n\n        this.maxEnergy = 20\n        this.energy = this.maxEnergy\n\n        this.fadeThreshold = 7\n\n        this.energyUseCoef = .005\n        this.matingThreshold = 15\n        this.matingEnergyCost = 5\n        this.maxSpeed = .6\n\n        this.energyVal = 20\n\n        this.mating = false\n        this.mateThreshold = 10\n\n        this.seekingMate = false\n\n        this.foodEaten = 0\n        this.eatFoodThreshold = 15\n        this.huntingThreshold = 7\n\n        this.hunting = false\n        this.nearestFoodCords = []\n\n\n        this.fleeDistanceThreshold = 200\n        this.fleeing = false\n        this.fleeFromCoords = []\n\n        this.afterIEatCB = () => {\n            //nothing required, spawn grow up separately\n        }\n        \n    }\n\n    mouthPlacer() {\n        let mouthPos = []\n        if (!this.right) {\n            mouthPos = [this.pos[0], this.pos[1] + (this.height / 2)]\n        } else {\n            mouthPos = [this.pos[0] + (this.width - this.mouthSize), this.pos[1] + (this.height / 2)]\n        }\n        return mouthPos\n    }\n\n    imgSelector() {\n       return this.right ? this.rightImg : this.leftImg \n    }\n    \n    placer() {\n        let pos = []\n        pos[0] = Math.floor(Math.random() * (this.arenaWidth- this.width))\n        pos[1] = Math.floor(Math.random() * (this.arenaHeight - this.height)) \n        return pos\n    }\n\n\n    draw() {\n        this.ctx.fillStyle = 'rgba(0,225,225,1)';\n        this.ctx.globalAlpha = this.energy > 7 ? 1 : (this.energy + 3) / 10\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n        if (this.mating) this.ctx.drawImage(this.mateHeart, this.mouthPos[0] + this.offset[0], this.mouthPos[1] + this.offset[1] - this.width, 15, 15)\n        if (this.view.debugging) {\n            this.drawMouths()\n            this.drawId()\n        }\n        this.ctx.globalAlpha = 1\n    }\n\n    drawMouths() {\n        //debugging function\n        this.ctx.fillRect(this.mouthPos[0] + this.offset[0], this.mouthPos[1] + this.offset[1], this.mouthSize, this.mouthSize)\n    }\n\n    drawId() {\n        //debugging function\n        this.ctx.fillStyle = 'rgba(0,0,0,1)';\n        this.ctx.font = \"12px serif\";\n        this.ctx.fillText(`${this.id}`, this.pos[0] + this.offset[0], this.pos[1] +  this.offset[1])\n    }\n\n    mate(spawnBool) {\n        this.mating = true\n        this.speed = 0\n        this.energy -= this.matingEnergyCost\n        setTimeout(()=>{\n            this.speed += .5\n            this.mating = false\n            if (spawnBool) return\n            let i = Math.floor(Math.random() * 6)\n            while (i > 0) {\n                i--\n                this.logic.spawnDenizen(this) \n            }\n        }, 1500)\n    }\n}\n\n//# sourceURL=webpack://jsproj/./src/denizens/fish.js?");

/***/ }),

/***/ "./src/denizens/fishbaby.js":
/*!**********************************!*\
  !*** ./src/denizens/fishbaby.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FishBaby; }\n/* harmony export */ });\n/* harmony import */ var _fish__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fish */ \"./src/denizens/fish.js\");\n/* harmony import */ var _engine_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../engine/utils */ \"./src/engine/utils.js\");\n\n\n\n\nclass FishBaby extends _fish__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic, pos) {\n        super(id, ctx, canvas, view, logic, pos)\n        this.spawn = true\n        this.id = \"FishBaby\" + id\n        this.leftImg.src = './dist/art/fishleft.png'\n        this.rightImg.src = './dist/art/fishright.png'\n        this.speed = (Math.floor(Math.random() * 5) + 1) / 10\n        this.width = 12\n        this.height = 8\n        this.pos = pos ? [pos[0] + (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.miniRandomizer)(), pos[1] + (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.miniRandomizer)()] : this.placer()\n        this.oldPos = this.pos\n        this.mouthSize = 4\n\n        this.maxEnergy = 10\n        this.energy = this.maxEnergy\n        this.energyUseCoef = .0025\n        this.maxSpeed = .3\n\n        this.energyVal = 5\n        this.fadeThreshold = 3\n\n        this.foodEaten = 0\n        this.growUpThreshold = 4\n        this.eatFoodThreshold = 8\n        this.huntingThreshold = 6\n\n        this.hunting = false\n        this.nearestFoodCords = []\n\n        this.fleeDistanceThreshold = 200\n        this.fleeing = false\n        this.fleeFromCoords = []\n\n        this.afterIEatCB = () => {\n            if (this.foodEaten === this.growUpThreshold) this.growUp()\n        }\n    }\n\n    growUp() {\n        this.dead = true\n        this.logic.recentlyDeadDenizens.push(this)\n        this.logic.spawnDenizen(this)\n    }\n\n}\n\n    \n\n//# sourceURL=webpack://jsproj/./src/denizens/fishbaby.js?");

/***/ }),

/***/ "./src/denizens/fishegg.js":
/*!*********************************!*\
  !*** ./src/denizens/fishegg.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Fishegg; }\n/* harmony export */ });\n/* harmony import */ var _floater__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./floater */ \"./src/denizens/floater.js\");\n/* harmony import */ var _engine_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../engine/utils */ \"./src/engine/utils.js\");\n/* harmony import */ var _fishbaby__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fishbaby */ \"./src/denizens/fishbaby.js\");\n\n\n\n\n\nclass Fishegg extends _floater__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic, pos) {\n        super(ctx, canvas, view, logic)\n        this.id = \"Fishegg\" + id\n        this.pos = [pos[0] + (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.miniRandomizer)(), pos[1] + (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.miniRandomizer)()]\n\n        this.img = new Image()\n        this.img.src = './dist/art/fishEggs.png'\n        this.spawn()\n        this.dims = Math.floor(Math.random() * 5) + 10\n        this.height = this.dims\n        this.width = this.dims\n\n        this.energyVal = 2\n    }\n\n\n    spawn() {\n        let timerId = setTimeout(()=>{\n            this.dead = true\n            this.logic.recentlyDeadDenizens.push(this)\n            if (this.trapped) return\n            this.logic.spawnDenizen(this)\n            this.logic.fishBabyCount += 1\n            this.logic.fishBabies[\"FishBaby\" + this.logic.fishBabyCount] = new _fishbaby__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.logic.fishBabyCount, this.ctx, this.canvas, this.view, this.logic, [this.pos[0], this.pos[1]])\n        },(0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(15000,25000))\n\n        this.clearOnDeath.push(timerId)\n    }\n}\n\n//# sourceURL=webpack://jsproj/./src/denizens/fishegg.js?");

/***/ }),

/***/ "./src/denizens/floater.js":
/*!*********************************!*\
  !*** ./src/denizens/floater.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Floater; }\n/* harmony export */ });\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./denizen */ \"./src/denizens/denizen.js\");\n\n\n\nclass Floater extends _denizen__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor(ctx, canvas, view, logic) {\n        super(ctx, canvas, view, logic)\n        this.bobCoef = Math.floor(Math.random() * 10) + 4\n        this.bobSpeed = (Math.floor(Math.random() * 3) + .1) / 30\n        this.trackCoef = 0\n        this.up = [true, false][Math.floor(Math.random() * 2)]\n        this.energy = 5\n    }\n\n    coreloop() {\n        this.bob()\n        this.deathChecker()\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n        if (this.view.debugging) {\n            this.ctx.fillStyle = 'rgba(0,0,0,1)';\n            this.ctx.font = \"12px serif\";\n            this.ctx.fillText(`${this.pos[1]}`, this.pos[0], this.pos[1])\n        }\n    }\n\n    deathChecker() {\n        if (this.energy === 0 || this.energyVal === 0) {\n            this.dead = true\n            this.logic.recentlyDeadDenizens.push(this)\n        }\n    }\n\n    bob() {\n        if (this.trapped) {\n            this.pos[0] = this.trapped[0] - this.trappedPosDelta[0]\n            this.pos[1] = this.trapped[1] - this.trappedPosDelta[1]\n            return\n        }\n\n        if (this.up) {\n            this.trackCoef -= this.bobSpeed\n            this.pos[1] -= this.bobSpeed\n        } else {\n            this.trackCoef += this.bobSpeed\n            \n            if (!(this.pos[1] > (this.arenaHeight - this.height))) {\n                this.pos[1] += this.bobSpeed\n            }\n        }\n\n        if (this.trackCoef > this.bobCoef) {\n            this.up = true\n        }\n\n        if (this.trackCoef < 0) {\n            this.up = false\n        }\n\n    }\n\n\n}\n\n//# sourceURL=webpack://jsproj/./src/denizens/floater.js?");

/***/ }),

/***/ "./src/denizens/jellyfish.js":
/*!***********************************!*\
  !*** ./src/denizens/jellyfish.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Jellyfish; }\n/* harmony export */ });\n/* harmony import */ var _engine_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine/utils */ \"./src/engine/utils.js\");\n/* harmony import */ var _swimmer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./swimmer */ \"./src/denizens/swimmer.js\");\n\n\n\n\nclass Jellyfish extends _swimmer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(id, ctx, canvas, view, logic){\n        super(ctx, canvas, view, logic)\n        this.id = \"Jellyfish\" + id\n        this.img = new Image()\n        this.img.src = ['./dist/art/jelly1.png', './dist/art/jelly2.png'][(0,_engine_utils__WEBPACK_IMPORTED_MODULE_0__.rand)(2)]\n        this.height = 25\n        this.width =  15\n        this.pos = this.placer()\n        this.bobSpeed = (Math.floor(Math.random() * 3) + .1) / 30\n\n        this.maxSpeed = .5\n        this.speed = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_0__.rand)(1, 5) / 100\n\n        this.maxEnergy = 5\n        this.energy = this.maxEnergy\n        this.consumptionRate = .002\n\n        this.up = [true,false][(0,_engine_utils__WEBPACK_IMPORTED_MODULE_0__.rand)(2)]\n        this.right = [true, false][(0,_engine_utils__WEBPACK_IMPORTED_MODULE_0__.rand)(2)]\n\n        this.trapHeight = 18\n        this.trapWidth = 18\n        this.trapPos = []\n        this.trapPlacer()\n        this.trappedPrey = false\n\n        this.movement1 = this.moveSelector()\n        this.movement2 = this.moveSelector()\n        this.moveChangerOne()\n        this.moveChangerTwo()\n    }\n\n    trapPlacer() {\n        this.trapPos[0] = this.pos[0] + 3\n        this.trapPos[1] = this.pos[1] + 10\n    }\n\n    moveSelector = () => {\n        return Object.values(this.movementPatterns)[Math.floor(Math.random() * 2)]\n    }\n\n    bob() {\n        if (this.trapped) {\n            this.pos[0] = this.trapped.pos[0] - this.trappedPosDelta[0]\n            this.pos[1] = this.trapped.pos[1] - this.trappedPosDelta[1]\n            return\n        }\n\n        if (this.up) {\n            this.trackCoef -= this.bobSpeed\n            this.pos[1] -= this.bobSpeed\n        } else {\n            this.trackCoef += this.bobSpeed\n\n            if (!(this.pos[1] > (this.arenaHeight - this.height))) {\n                this.pos[1] += this.bobSpeed\n            }\n        }\n\n        if (this.trackCoef > this.bobCoef) {\n            this.up = true\n        }\n\n        if (this.trackCoef < 0) {\n            this.up = false\n        }\n\n    }\n\n\n\n    placer() {\n        let pos = [(0,_engine_utils__WEBPACK_IMPORTED_MODULE_0__.rand)(1, this.arenaWidth - this.width), (0,_engine_utils__WEBPACK_IMPORTED_MODULE_0__.rand)(1, this.arenaHeight - this.height)]\n        return pos\n    }\n\n    coreloop() {\n\n        if (this.trappedPrey) this.consumeFod(this.trappedPrey, \"trapped\")\n\n        this.bob()\n        this.move()\n        this.draw()\n        // this.ctx.fillRect(this.trapPos[0] + this.offset[0], this.trapPos[1] + this.offset[1], this.trapWidth, this.trapHeight)\n\n\n        if (this.view.debugging) {\n            this.ctx.fillStyle = 'rgba(0,0,0,1)';\n            this.ctx.font = \"12px serif\";\n            this.ctx.fillText(`${[Math.floor(this.pos[0]), Math.floor(this.pos[1])]}`, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1])\n            this.ctx.fillRect(this.trapPos[0] + this.offset[0], this.trapPos[1] + this.offset[1], this.trapWidth, this.trapHeight)\n            \n            \n        }\n    }\n\n    consumeFod(foodSource, foodType) {\n        this.energy = Math.min(this.maxEnergy, this.energy + this.consumptionRate)\n        foodSource.energy -= this.consumptionRate\n        this.totalEnergyConsumed += this.consumptionRate\n\n        if (foodSource.dead) {\n            this.speed = .2\n            this.trappedPrey = false\n        }\n    }\n    \n    move() {\n        if (this.timeToSwitchMovement) {\n            Object.values(this.movementSwitches)[Math.floor(Math.random() * Object.values(this.movementSwitches).length)]()\n            this.timeToSwitchMovement = false\n        }    \n        if (this.pos[0] > this.arenaWidth - this.width || this.pos[0] < 0) this.right = !this.right;\n        if (this.pos[1] > this.arenaHeight - this.height || this.pos[1] < 0) this.up = !this.up\n        this.trapPlacer()\n        this.movement1();\n        this.movement2();\n    }\n\n    movementSwitches = {\n        reverseUp: () => {\n            this.up = !this.up\n        },\n\n        reverseSide: () => {\n            this.right = !this.right;\n        },\n\n        speedUp: () => {\n            if (this.speed < this.maxSpeed) this.speed += .1\n        },\n\n        slowDown: () => {\n            if (this.speed > .3) this.speed -= .1\n        }\n    }\n\n    draw() {\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n    }\n}\n\n\n\n\n//# sourceURL=webpack://jsproj/./src/denizens/jellyfish.js?");

/***/ }),

/***/ "./src/denizens/otter.js":
/*!*******************************!*\
  !*** ./src/denizens/otter.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Otter; }\n/* harmony export */ });\n/* harmony import */ var _engine_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine/utils */ \"./src/engine/utils.js\");\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./denizen */ \"./src/denizens/denizen.js\");\n\n\n\n\n\nclass Otter extends _denizen__WEBPACK_IMPORTED_MODULE_1__[\"default\"]{\n    constructor(id, ctx, canvas, view, logic) {\n        super(ctx, canvas, view, logic)\n        this.id = \"Otter\" + id\n        this.ctx = ctx\n        this.canvas = canvas\n        this.view = view\n        this.logic = logic\n        this.upRight = new Image()\n        this.upRight.src = './dist/art/otter/otterUpRight.png'\n        this.upLeft = new Image()\n        this.upLeft.src = './dist/art/otter/otterUpLeft.png'\n        this.downRight = new Image()\n        this.downRight.src = './dist/art/otter/otterDownRight.png'\n        this.downLeft = new Image()\n        this.downLeft.src = './dist/art/otter/otterDownLeft.png'\n        this.height = 60\n        this.width = 30\n\n        this.maxSpeed = 1\n        this.appearedOnScreen = false\n        \n        this.pos = []\n\n        this.centerX = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_0__.rand)(this.arenaWidth)\n        this.centerY = 0;\n\n\n\n        this.radius = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_0__.rand)(this.arenaHeight/2, this.arenaHeight - 50)\n\n        this.right = [true,false][(0,_engine_utils__WEBPACK_IMPORTED_MODULE_0__.rand)(2)]\n\n        this.angle = this.right ? 135 : 0\n        this.trapPos = [null,null]\n\n        this.trapHeight = 6\n        this.trapWidth = 4\n        this.trappedPrey = false\n\n        this.trapPlacer()\n        this.imgSelector()\n    }\n\n    imgSelector() {\n        this.img = this.right ? this.downRight : this.downLeft\n    }\n\n    moveInACircle() {\n        if (this.right) {\n            this.angle -= 0.001;\n        } else {\n            this.angle += 0.001;\n\n        }\n        this.pos[0] = this.centerX + this.radius * Math.cos(this.angle);\n        this.pos[1] = this.centerY + this.radius * Math.sin(this.angle)\n    }\n\n    coreloop() {\n        this.rotateImage(this.img, this.pos[0], this.pos[1], this.width, this.height)\n        this.moveInACircle()\n\n        if (!this.appearedOnScreen && this.pos[0] > 0 && this.pos[1] > 0 && this.pos[0] + this.width < this.arenaWidth)  {\n            this.appearedOnScreen = true\n        }\n\n        this.trapPlacer()\n        if (this.appearedOnScreen && this.pos[1] + this.height < 0 || (this.pos[0] + this.width < 0 || this.pos[0] - this.width > this.arenaWidth)) {\n            this.dead = true\n            this.logic.recentlyDeadDenizens.push(this)\n\n            if (this.trappedPrey) {\n                this.trappedPrey.dead = true\n                this.logic.recentlyDeadDenizens.push(this.trappedPrey)\n            }\n        }\n    }\n\n    rotateImage() {\n        this.ctx.save();\n        this.ctx.translate(this.pos[0] + this.width / 2 + this.offset[0], this.pos[1] + this.height / 2 + this.offset[1]);\n\n        if (this.right) {\n            this.ctx.rotate(((this.angle - 135) * 45) * Math.PI / 180.0);\n        }else {\n            this.ctx.rotate((this.angle * 45) * Math.PI / 180.0);\n        }\n\n        this.ctx.translate(-this.pos[0] - this.width / 2 - this.offset[0], -this.pos[1] - this.height / 2 - this.offset[1]);\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height);\n        \n        this.ctx.restore();\n    }\n\n    trapPlacer() {\n        const centerX = this.width / 2;\n        const centerY = this.height / 2;\n\n        let bottomX;\n        let bottomY;\n        if (this.right) {\n            bottomX = (this.width / 2) - 10\n            bottomY = (-this.height / 2) + 15\n        } else {\n            bottomX = (-this.width / 2) + 20\n            bottomY = (this.height / 2) - 10\n        }\n       \n        const rotatedBottomX = bottomX * Math.cos(this.angle) - bottomY * Math.sin(this.angle);\n        const rotatedBottomY = bottomX * Math.sin(this.angle) + bottomY * Math.cos(this.angle);\n\n        const bottomPosX = this.pos[0] + centerX + rotatedBottomX\n        const bottomPosY = this.pos[1] + centerY + rotatedBottomY\n\n        this.trapPos[0] = bottomPosX;\n        this.trapPos[1] = bottomPosY;\n\n        // this.ctx.fillStyle = 'rgba(0,255,255,1)';\n        // this.ctx.fillRect(this.trapPos[0] + this.offset[0], this.trapPos[1] + this.offset[1], this.trapWidth, this.trapHeight)\n    }\n\n}\n\n//# sourceURL=webpack://jsproj/./src/denizens/otter.js?");

/***/ }),

/***/ "./src/denizens/seaurchin.js":
/*!***********************************!*\
  !*** ./src/denizens/seaurchin.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SeaUrchin; }\n/* harmony export */ });\n/* harmony import */ var _engine_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine/utils */ \"./src/engine/utils.js\");\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./denizen */ \"./src/denizens/denizen.js\");\n\n\n\nclass SeaUrchin extends _denizen__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(id, ctx, canvas, view, logic, parentPos) {\n        super(ctx, canvas, view, logic)\n        this.id = \"SeaUrchin\" + id\n        this.img = new Image()\n        this.img.src = './dist/art/sea_urchin.png'\n\n        this.height = 10\n        this.width = 20\n\n        this.pos = [parentPos[0] + this.width + (0,_engine_utils__WEBPACK_IMPORTED_MODULE_0__.rand)(5), parentPos[1] + this.height + 20]\n    }\n\n    coreloop() {\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n\n        if (this.trapped) {\n            this.pos[0] = this.trapped[0] - this.trappedPosDelta[0]\n            this.pos[1] = this.trapped[1] - this.trappedPosDelta[1]\n            return\n        }\n\n    }\n\n}\n\n//# sourceURL=webpack://jsproj/./src/denizens/seaurchin.js?");

/***/ }),

/***/ "./src/denizens/shark.js":
/*!*******************************!*\
  !*** ./src/denizens/shark.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Shark; }\n/* harmony export */ });\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./effect */ \"./src/denizens/effect.js\");\n/* harmony import */ var _swimmer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./swimmer */ \"./src/denizens/swimmer.js\");\n\n\n\n\nclass Shark extends _swimmer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic, spawn) {\n        super(ctx, canvas, view, logic)\n        this.id = \"Shark\" + id\n\n        this.leftImg.src = './dist/art/sharkleft.png'\n        this.rightImg.src = './dist/art/sharkright.png'\n        this.mateHeart = new Image()\n        this.mateHeart.src = './dist/art/red-heart.png'\n        this.speed = (Math.floor(Math.random() * 5) + 5) / 10\n        this.width = spawn ? 20 : 100\n        this.height = spawn ? 8 : 41\n        this.pos = this.placer()\n        this.oldPos = this.pos\n        this.mouthSize = spawn ? 4 : 12\n        this.mouthPos = this.mouthPlacer()\n        this.movement1 = this.moveSelector()\n        this.movement2 = this.moveSelector()\n        this.moveChangerOne()\n        this.moveChangerTwo()\n\n        this.seekingMate = false\n        this.mateThreshold = 70\n        \n        this.maxEnergy = 100\n        this.energy = this.maxEnergy\n        this.fadeThreshold = 7\n        this.energyUseCoef = .005\n        this.matingThreshold = 15\n        this.matingEnergyCost = 5\n        this.maxSpeed = spawn ? .3 : 1\n\n        this.mating = false\n        this.spawn = spawn ? true : false\n        this.foodEaten = 0\n        this.huntingThreshold = 60\n        this.eatFoodThreshold = 70\n\n        this.hunting = false\n        this.nearestFoodCords = []\n\n        this.afterIEatCB = () => {\n            this.logic.effectCount++\n            this.logic.effects[\"Effect\" + this.logic.effectCount] = new _effect__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.logic.effectCount, \"bloodSpurt\", [this.mouthPos[0], this.mouthPos[1]], this.logic.ctx, this.logic.canvas, this.logic.view)\n        }\n\n    }\n\n    growUp() {\n        this.spawn = false\n        this.maxSpeed = .6\n        this.mouthSize = 8\n        this.width = 25\n        this.height = 16\n    }\n\n    mouthPlacer() {\n        let mouthPos = []\n        if (!this.right) {\n            mouthPos = [this.pos[0] + 5, this.pos[1] + (this.height / 2)]\n        } else {\n            mouthPos = [this.pos[0] + (this.width - this.mouthSize) - 5, this.pos[1] + (this.height / 2)]\n        }\n        return mouthPos\n    }\n\n    imgSelector() {\n        return this.right ? this.rightImg : this.leftImg\n    }\n\n    placer() {\n        let pos = []\n        pos[0] = Math.floor(Math.random() * (this.arenaWidth - this.width))\n        pos[1] = Math.floor(Math.random() * (this.arenaHeight - this.height))\n        return pos\n    }\n\n\n    draw() {\n        this.ctx.fillStyle = 'rgba(0,225,225,1)';\n        this.ctx.globalAlpha = this.energy > this.fadeThreshold ? 1 : (this.energy + Math.abs(this.fadeThreshold - 10)) / 10\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n\n        if (this.view.debugging) {\n            this.drawMouths()\n            this.drawId()\n        }\n        this.ctx.globalAlpha = 1\n    }\n\n    drawMouths() {\n        //debugging function\n        this.ctx.fillRect(this.mouthPos[0] + this.offset[0], this.mouthPos[1] + this.offset[1], this.mouthSize, this.mouthSize)\n    }\n\n    drawId() {\n        //debugging function\n        this.ctx.fillStyle = 'rgba(0,0,0,1)';\n        this.ctx.font = \"12px serif\";\n        this.ctx.fillText(`${this.energy}`, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1])\n    }\n\n    mate(){\n        \n    }\n\n}\n\n//# sourceURL=webpack://jsproj/./src/denizens/shark.js?");

/***/ }),

/***/ "./src/denizens/swimmer.js":
/*!*********************************!*\
  !*** ./src/denizens/swimmer.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Swimmer; }\n/* harmony export */ });\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./denizen */ \"./src/denizens/denizen.js\");\n\n\nclass Swimmer extends _denizen__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor(ctx, canvas, view, logic) {\n        super(ctx, canvas, view, logic)\n        this.up = [true, false][Math.floor(Math.random() * 2)]\n        this.right = [true, false][Math.floor(Math.random() * 2)]\n        this.leftImg = new Image()\n        this.rightImg = new Image()\n        this.img = this.imgSelector()\n        this.recentlySwitchedDirections = false\n        this.movementSwitchTimer()\n        this.timeToSwitchMovement = false\n    }\n\n    coreloop() {\n        this.move()\n        this.consumeEnergy()\n        this.draw()\n        // if (this.view.gameFrame % 10 !== 0) return\n        if (this.dead && !(this.spawn && this.foodEaten === this.growUpThreshold)) this.logic.denizenCorpse(this)\n        this.behaviorChanger()\n    }\n\n\n    behaviorChanger() {\n        if (!this.hunting && this.energy < this.huntingThreshold) this.logic.hungryDenizenArr.push(this)\n       \n        if (!this.spawn && !this.seekingMate && this.energy > this.matingThreshold) {\n            this.logic.matingDenizensObj[this.id] = this\n            this.seekingMate = true\n        } else if (!this.spawn && this.seekingMate && this.energy < this.matingThreshold) {\n            delete this.logic.matingDenizensObj[this.id]\n            this.seekingMate = false\n        }\n\n    }\n\n    movementSwitchTimer() {\n        setTimeout(()=>{\n            this.timeToSwitchMovement = true\n            this.movementSwitchTimer()\n        },Math.floor(Math.random() * 25000) + 7000)\n    }\n\n    imgSelector() {\n        return this.right ? this.rightImg : this.leftImg\n    }\n\n\n    switchDirections() {\n        if (this.recentlySwitchedDirections) return\n        this.right = !this.right;\n        this.img = this.imgSelector();\n        this.recentlySwitchedDirections = true\n        setTimeout(() => { this.recentlySwitchedDirections = false },350)\n    }\n\n    move() {\n\n        if (this.trapped) {\n            this.pos[0] = this.trapped[0] - this.trappedPosDelta[0]\n            this.pos[1] = this.trapped[1] - this.trappedPosDelta[1]\n            return\n        }\n\n        if (this.pos[0] > this.arenaWidth - this.width || this.pos[0] < 0) {\n            this.switchDirections()\n        }\n        if (this.pos[1] > this.arenaHeight - this.height || this.pos[1] < 0) this.up = !this.up\n        this.mouthPos = this.mouthPlacer();\n\n        if (this.speed < .01) this.speed = .3\n\n        this.oldPos = [this.pos[0], this.pos[1]]\n\n        if (!this.mating && this.hunting) {\n            this.moveTowardsFood()\n            this.fishOrienter()\n            return\n        }\n\n        if (this.fleeing) {\n            this.fleeFromPredator()\n            this.fishOrienter()\n            return\n        }\n\n        if (!this.mating && !this.hunting) {\n            if (this.timeToSwitchMovement){\n                Object.values(this.movementSwitches)[Math.floor(Math.random() * Object.values(this.movementSwitches).length)]()\n                this.timeToSwitchMovement = false\n            }    \n\n            this.movement1();\n            this.movement2();\n            this.fishOrienter()\n        }\n\n\n    }\n\n    fleeFromPredator() {\n        let [xhigh, xlow, yhigh, ylow] = this.inBounds()\n\n\n        if (this.pos[0] > this.fleeFromCoords[0]) {\n            if (xhigh) {\n                this.pos[0] += this.maxSpeed\n            }else {\n                this.pos[0] = this.arenaWidth - this.width\n            }\n        } else {\n            if (xlow) {\n                this.pos[0] -= this.maxSpeed\n            } else {\n                this.pos[0] = 0\n            }\n        }\n\n        if (this.pos[1] > this.fleeFromCoords[1]) {\n            if (yhigh) {\n                this.pos[1] += this.maxSpeed\n            } else {\n                this.pos[1] = this.arenaHeight - this.height\n            }\n        } else {\n            if (ylow) {\n                this.pos[1] -= this.maxSpeed\n            } else {\n                this.pos[1] = 0\n            }\n        }\n\n    }\n\n    inBounds(){\n        let xhigh = true\n        let xlow = true\n        let yhigh = true\n        let ylow = true\n        if (this.pos[0] < 0) xlow = false\n        if (this.pos[0] > this.arenaWidth - this.width) xhigh = false\n        if (this.pos[1] < 0) ylow = false\n        if (this.pos[1] > this.arenaHeight - this.height) yhigh = false\n        return [xhigh, xlow, yhigh, ylow]\n    }\n\n    movementPatterns = {\n        scan: () => {\n            if (this.right) {\n                this.pos[0] += (this.speed / 2)\n            } else {\n                this.pos[0] -= (this.speed / 2)\n            }\n        },\n\n        crissCross: () => {\n            this.movementPatterns.scan()\n            this.movementPatterns.bob()\n        },\n\n        bob: () => {\n            if (this.up) {\n                this.pos[1] += (this.speed / 2)\n            } else {\n                this.pos[1] -= (this.speed / 2)\n            }\n        }\n    }\n\n    movementSwitches = {\n        reverseUp: () => {\n            this.up = !this.up\n        },\n\n        reverseSide: () => {\n            this.right = !this.right;\n            this.img = this.imgSelector();\n        },\n\n        speedUp: () => {\n            if (this.speed < this.maxSpeed) this.speed += .1\n        },\n\n        slowDown: () => {\n            if (this.speed > .3) this.speed -= .1\n        },\n\n        dash: () => {\n            this.speed += .5\n            setTimeout(() => this.speed -= .5, 500)\n        }\n    }\n\n    fishOrienter() {\n        if (this.recentlySwitchedDirections) return\n        if (this.oldPos[0] < this.pos[0]) {\n            this.right = true\n            this.img = this.imgSelector();\n            this.recentlySwitchedDirections = true\n            setTimeout(() => { this.recentlySwitchedDirections = false }, 350)\n        } else {\n            this.right = false\n            this.img = this.imgSelector();\n            this.recentlySwitchedDirections = true\n            setTimeout(() => { this.recentlySwitchedDirections = false }, 350)\n        }\n    }\n\n    moveTowardsFood() {\n\n        let [xhigh, xlow, yhigh, ylow] = this.inBounds()\n\n        if (this.mouthPos[0] < this.nearestFoodCords[0]) {\n            if (xhigh) this.pos[0] += this.maxSpeed \n        } else {\n            if (xlow) this.pos[0] -= this.maxSpeed\n        }\n\n        if (this.mouthPos[1] < this.nearestFoodCords[1]) {\n            if (yhigh) this.pos[1] += this.maxSpeed\n        } else {\n            if (ylow) this.pos[1] -= this.maxSpeed\n        }\n    \n    }\n\n    moveSelector = () => {\n        return Object.values(this.movementPatterns)[Math.floor(Math.random() * 2)]\n    }\n\n    moveChangerOne() {\n        this.movement1 = this.moveSelector()\n        setTimeout(() => {\n            this.moveChangerOne()\n        }, Math.floor(Math.random() * 3000))\n    }\n\n    moveChangerTwo() {\n        this.movement2 = this.moveSelector()\n        setTimeout(() => {\n            this.moveChangerTwo()\n        }, Math.floor(Math.random() * 3000))\n    }\n\n    consumeEnergy() {\n        this.energy -= this.energyUseCoef * this.speed\n        if (this.energy < .05) {\n            this.dead = true\n            this.logic.recentlyDeadDenizens.push(this)\n            this.logic.denizenCorpse(this)\n        }\n    }\n\n\n}\n\n//# sourceURL=webpack://jsproj/./src/denizens/swimmer.js?");

/***/ }),

/***/ "./src/denizens/turtle.js":
/*!********************************!*\
  !*** ./src/denizens/turtle.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Turtle; }\n/* harmony export */ });\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./denizen */ \"./src/denizens/denizen.js\");\n\n\nclass Turtle extends _denizen__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(id, ctx, canvas, view, logic) {\n        super(ctx, canvas, view, logic)\n        this.id = \"Turtle\" + id\n        this.img = new Image()\n        this.img.src = './dist/art/turtle.png'\n        this.pos = [500,500]\n        this.width = 80\n        this.height = 32\n        this.maxSpeed = 1\n        this.speed = 1\n    }\n\n    coreloop() {\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n        this.move()\n    }\n\n    move() {\n        this.speed -= .005\n        if (this.speed < .2) this.speed = 1.3\n        this.pos[0] += this.speed\n    }\n}\n\n//# sourceURL=webpack://jsproj/./src/denizens/turtle.js?");

/***/ }),

/***/ "./src/engine/input.js":
/*!*****************************!*\
  !*** ./src/engine/input.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ InputHandler; }\n/* harmony export */ });\n\r\nclass InputHandler {\r\n\r\n    constructor(view){\r\n        this.view = view\r\n        this.keys = [];\r\n        this.mouseIsDownAt = false\r\n\r\n        window.addEventListener('keydown', e => {\r\n            if((e.code === 'ArrowDown' ||\r\n                e.code === 'ArrowUp' ||\r\n                e.code === 'ArrowLeft' ||\r\n                e.code === 'ArrowRight' ||\r\n                e.code === \"Space\")\r\n            && this.keys.indexOf(e.code) === -1){\r\n                this.keys.push(e.code);\r\n            }\r\n            e.preventDefault();\r\n        });\r\n\r\n        window.addEventListener('keyup', e => {\r\n            if (e.code === 'ArrowDown' ||\r\n                e.code === 'ArrowUp' ||\r\n                e.code === 'ArrowLeft' ||\r\n                e.code === 'ArrowRight' ||\r\n                e.code === \"Space\") {\r\n                this.keys.splice(this.keys.indexOf(e.code), 1);\r\n            }\r\n            e.preventDefault();\r\n        })\r\n    }\r\n\r\n    dragScreen(moveArr) {\r\n        this.view.offset[0] += moveArr[0] - this.mouseIsDownAt[0]\r\n        this.view.offset[1] += moveArr[1] - this.mouseIsDownAt[1]\r\n\r\n        this.mouseIsDownAt = [moveArr[0], moveArr[1]] \r\n    }\r\n\r\n\r\n}\n\n//# sourceURL=webpack://jsproj/./src/engine/input.js?");

/***/ }),

/***/ "./src/engine/intro.js":
/*!*****************************!*\
  !*** ./src/engine/intro.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Intro; }\n/* harmony export */ });\n\nclass Intro {\n    constructor(canvas, view) {\n        this.canvas = canvas\n        this.ctx = this.canvas.getContext('2d')\n        this.view = view\n        this.background = new Image()\n        this.background.src = './dist/art/intro.png'\n        this.bgHeight = 648\n        this.bgWidth = 1440\n        this.xOffset = 0\n        this.yOffset = 0\n        this.looptracker = 0 \n        this.simTransition = false\n        this.simStart = false\n        this.fader = 0\n\n        this.animate()\n\n    }\n\n    animate() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        this.updatePos()\n        this.drawDynamicBackground()\n        this.ctx.fillStyle = `rgba(0,0,0,1)`\n        this.ctx.font = \"25px Georgia\";\n        this.drawTitle(\"kelpscape\")\n        if (this.simTransition) this.simStarter()\n    }\n\n    simStarter() {\n        this.ctx.fillStyle = `rgba(0,0,0,${this.fader})`;\n        this.fader += .005\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n        if (this.fader > 1) this.simStart = true\n    }\n\n    updatePos() {\n        this.looptracker += .5\n    }\n\n    drawTitle(text) {\n        const centerX = this.canvas.width / 2;\n        const centerY = this.canvas.height / 2;\n\n        const textWidth = this.ctx.measureText(text).width;\n        const textHeight = 10;\n\n        const x = centerX - (textWidth / 2);\n        const y = centerY + (textHeight / 2);\n\n        this.ctx.beginPath();\n        this.ctx.moveTo(centerX + 25, centerY + 50);\n        this.ctx.lineTo(centerX - 25, centerY + 25);\n        this.ctx.lineTo(centerX - 25, centerY + 75);\n        this.ctx.fill();\n\n        this.ctx.fillText(text, x, y);\n    }\n\n\n\n    drawDynamicBackground() {\n        let scaleFactor = Math.max(this.canvas.width / this.bgWidth, this.canvas.height / this.bgHeight);\n        let newWidth = this.bgWidth * scaleFactor;\n        let newHeight = this.bgHeight * scaleFactor;\n        let x = (this.canvas.width / 2) - (newWidth / 2);\n        let y = (this.canvas.height / 2) - (newHeight / 2);\n        this.ctx.drawImage(this.background, x + this.looptracker, y, newWidth, newHeight);\n\n        if (x + this.looptracker >= 0) {\n            let secondX = (x + this.looptracker - newWidth)\n            this.ctx.drawImage(this.background, secondX + 1, y, newWidth, newHeight);\n        } \n\n        if (x + this.looptracker - newWidth > 0)  {\n            this.looptracker = -x + 1\n        }\n    }\n\n\n\n\n}\n\n\n\n//# sourceURL=webpack://jsproj/./src/engine/intro.js?");

/***/ }),

/***/ "./src/engine/logic.js":
/*!*****************************!*\
  !*** ./src/engine/logic.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Logic; }\n/* harmony export */ });\n/* harmony import */ var _quadtree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quadtree */ \"./src/engine/quadtree.js\");\n/* harmony import */ var _denizens_fishbaby__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../denizens/fishbaby */ \"./src/denizens/fishbaby.js\");\n/* harmony import */ var _denizens_algae__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../denizens/algae */ \"./src/denizens/algae.js\");\n/* harmony import */ var _denizens_fish__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../denizens/fish */ \"./src/denizens/fish.js\");\n/* harmony import */ var _denizens_shark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../denizens/shark */ \"./src/denizens/shark.js\");\n/* harmony import */ var _denizens_effect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../denizens/effect */ \"./src/denizens/effect.js\");\n/* harmony import */ var _denizens_fishegg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../denizens/fishegg */ \"./src/denizens/fishegg.js\");\n/* harmony import */ var _environment_seaweedCluster__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../environment/seaweedCluster */ \"./src/environment/seaweedCluster.js\");\n/* harmony import */ var _environment_seaweed__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../environment/seaweed */ \"./src/environment/seaweed.js\");\n/* harmony import */ var _denizens_crabbaby__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../denizens/crabbaby */ \"./src/denizens/crabbaby.js\");\n/* harmony import */ var _denizens_crab__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../denizens/crab */ \"./src/denizens/crab.js\");\n/* harmony import */ var _environment_rock__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../environment/rock */ \"./src/environment/rock.js\");\n/* harmony import */ var _denizens_deadCreature__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../denizens/deadCreature */ \"./src/denizens/deadCreature.js\");\n/* harmony import */ var _denizens_jellyfish__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../denizens/jellyfish */ \"./src/denizens/jellyfish.js\");\n/* harmony import */ var _denizens_otter__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../denizens/otter */ \"./src/denizens/otter.js\");\n/* harmony import */ var _denizens_seaurchin__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../denizens/seaurchin */ \"./src/denizens/seaurchin.js\");\n/* harmony import */ var _denizens_turtle__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../denizens/turtle */ \"./src/denizens/turtle.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass Logic {\n\n    constructor(ctx, canvas, view) {\n        this.ctx = ctx\n        this.canvas = canvas\n        this.view = view\n\n        this.fishCount = 8\n        this.fishBabyCount =  4\n        this.algaeCount = 100\n        this.sharkCount = 2\n        this.eggCount = 0\n        this.effectCount = 0\n        this.turtleCount = 1\n        this.seaweedClusterCount = 15\n        this.deadCreatureCount = 0\n        this.crabCount = 10\n        this.crabBabyCount = 0\n        this.jellyfishCount = 50\n        this.rockCount = 20\n        this.otterCount = 0\n        this.seaUrchinCount = 0\n\n        this.fishes = this.tankPopulator(this.fishCount, _denizens_fish__WEBPACK_IMPORTED_MODULE_3__[\"default\"])\n        this.fishBabies = this.tankPopulator(this.fishBabyCount, _denizens_fishbaby__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n        this.algae = this.tankPopulator(this.algaeCount, _denizens_algae__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n        this.sharks = this.tankPopulator(this.sharkCount, _denizens_shark__WEBPACK_IMPORTED_MODULE_4__[\"default\"])\n        this.eggs = this.tankPopulator(this.eggCount, _denizens_fishegg__WEBPACK_IMPORTED_MODULE_6__[\"default\"])\n        this.effects = this.tankPopulator(this.effectCount, _denizens_effect__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n        this.turtles = this.tankPopulator(this.turtleCount, _denizens_turtle__WEBPACK_IMPORTED_MODULE_16__[\"default\"])\n        this.seaUrchins = this.tankPopulator(this.seaUrchinCount, _denizens_seaurchin__WEBPACK_IMPORTED_MODULE_15__[\"default\"])\n        this.seaweedClusters = this.tankPopulator(this.seaweedClusterCount, _environment_seaweedCluster__WEBPACK_IMPORTED_MODULE_7__[\"default\"])\n        this.deadCreatures = {}\n        this.crabs = this.tankPopulator(this.crabCount, _denizens_crab__WEBPACK_IMPORTED_MODULE_10__[\"default\"])\n        this.crabBabies = this.tankPopulator(this.crabBabyCount, _denizens_crabbaby__WEBPACK_IMPORTED_MODULE_9__[\"default\"])\n        this.jellyfish = this.tankPopulator(this.jellyfishCount, _denizens_jellyfish__WEBPACK_IMPORTED_MODULE_13__[\"default\"])\n        this.rocks = this.tankPopulator(this.rockCount, _environment_rock__WEBPACK_IMPORTED_MODULE_11__[\"default\"])\n        this.otters = {}\n        \n\n        this.algaeSpawnIncrement = 2000\n        this.algaeSpawns()\n\n        this.otterDiveIncrement = 10000\n        this.ottersDiveSometimes()\n        \n        this.hungryDenizenArr = []\n        this.assignFoodWeb()\n        this.assignSpeciesObjects() \n\n        this.matingDenizensObj = {}\n\n        this.predatorsWithMouthsArr = [...Object.values(this.fishBabies), ...Object.values(this.fishes), ...Object.values(this.sharks)]\n        this.scavengersArr = [...Object.values(this.crabs), ...Object.values(this.crabBabies)]\n        this.trappersArr = [...Object.values(this.crabs), ...Object.values(this.jellyfish), ...Object.values(this.otters)]\n        this.recentlyDeadDenizens = []\n\n    }\n\n    ottersDiveSometimes() {\n        setTimeout(() => {\n            // console.log(\"new otter\")\n            this.otterCount++\n            this.otters[\"Otter\" + this.otterCount] = new _denizens_otter__WEBPACK_IMPORTED_MODULE_14__[\"default\"](this.otterCount, this.ctx, this.canvas, this.view, this)\n            this.ottersDiveSometimes()\n        }, Math.floor(Math.random() * this.otterDiveIncrement) + this.otterDiveIncrement)\n    }\n\n    spawnDenizen(parentDenizen) {\n        switch(parentDenizen.constructor) {\n            case _denizens_fish__WEBPACK_IMPORTED_MODULE_3__[\"default\"]:\n                this.eggCount += 1\n                this.eggs[\"Fishegg\" + this.eggCount] = new _denizens_fishegg__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this.eggCount, this.ctx, this.canvas, this.view, this, [Math.floor(parentDenizen.pos[0]), Math.floor(parentDenizen.pos[1])])\n                break\n            case _denizens_fishegg__WEBPACK_IMPORTED_MODULE_6__[\"default\"]:\n                this.fishBabyCount += 1\n                this.fishBabies[\"FishBaby\" + this.fishBabyCount] = new _denizens_fishbaby__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.fishBabyCount, this.ctx, this.canvas, this.view, this, [Math.floor(parentDenizen.pos[0]), Math.floor(parentDenizen.pos[1])])\n                break\n            case _denizens_fishbaby__WEBPACK_IMPORTED_MODULE_1__[\"default\"]:\n                this.fishCount += 1\n                this.fishes[\"Fish\" + this.fishCount] = new _denizens_fish__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.fishCount, this.ctx, this.canvas, this.view, this, [parentDenizen.pos[0], parentDenizen.pos[1]])\n                break\n            case _denizens_crab__WEBPACK_IMPORTED_MODULE_10__[\"default\"]:\n                this.crabBabyCount += 1\n                this.crabBabies[\"CrabBaby\" + this.crabBabyCount] = new _denizens_crabbaby__WEBPACK_IMPORTED_MODULE_9__[\"default\"](this.crabBabyCount, this.ctx, this.canvas, this.view, this, [Math.floor(parentDenizen.pos[0]), Math.floor(parentDenizen.pos[1])])\n                break\n            case _denizens_crabbaby__WEBPACK_IMPORTED_MODULE_9__[\"default\"]:\n                this.crabCount += 1\n                this.crabs[\"Crab\" + this.crabCount] = new _denizens_crab__WEBPACK_IMPORTED_MODULE_10__[\"default\"](this.crabCount, this.ctx, this.canvas, this.view, this, [parentDenizen.pos[0], parentDenizen.pos[1]])\n                break\n            case _environment_seaweed__WEBPACK_IMPORTED_MODULE_8__[\"default\"]:\n                this.seaUrchinCount += 1\n                this.seaUrchins[\"SeaUrchin\" + this.seaUrchinCount] = new _denizens_seaurchin__WEBPACK_IMPORTED_MODULE_15__[\"default\"](this.seaUrchinCount, this.ctx, this.canvas, this.view, this, [parentDenizen.pos[0], parentDenizen.pos[1]])\n                break\n        }\n    }\n\n    denizenCorpse(deadDenizen) {\n        this.deadCreatureCount++\n        this.deadCreatures[\"DeadCreature\" + this.deadCreatureCount] = new _denizens_deadCreature__WEBPACK_IMPORTED_MODULE_12__[\"default\"](this.deadCreatureCount, this.ctx, this.canvas, this.view, this, deadDenizen.pos, deadDenizen)\n    }\n\n\n\n\n    trappersTrapPrey() {\n        for (let i = 0; i < this.trappersArr.length; i++) {\t\n            let trapper = this.trappersArr[i]\n            if (trapper.trappedPrey) continue\n            if (trapper.mating) continue\n\n            let collisionArray = this.view.quadtree.findOverlaps(new _quadtree__WEBPACK_IMPORTED_MODULE_0__.Rectangle(trapper.trapPos[0], trapper.trapPos[1], trapper.trapWidth, trapper.trapHeight),\"fullyOverlaps\", trapper)\n\n            // pretty inneficient -> should look up predators directly\n            for (let j = 0; j < collisionArray.length; j++) {\n                let prey = collisionArray[j]\n                for (let k = 0; k < trapper.preySpecies.length; k++) {\n                    if (prey instanceof trapper.preySpecies[k]) {\n                        if (prey.dead) continue\n                        \n                        prey.trapped = trapper.trapPos\n                        prey.trappedPosDelta = [trapper.trapPos[0] - prey.pos[0], trapper.trapPos[1] - prey.pos[1]]\n                        trapper.trappedPrey = prey\n                        trapper.afterITrapCB()\n                    }\n                }\n            }\n        }\n    }\n\n    reAssignDataObjs() {\n        this.predatorsWithMouthsArr = [...Object.values(this.fishBabies),...Object.values(this.fishes), ...Object.values(this.sharks)]\n        this.scavengersArr = [...Object.values(this.crabs), ...Object.values(this.crabBabies)]\n        this.trappersArr = [...Object.values(this.crabs), ...Object.values(this.jellyfish), ...Object.values(this.otters)]\n    }\n\n    \n    assignFoodWeb() {\n        _denizens_fish__WEBPACK_IMPORTED_MODULE_3__[\"default\"].prototype.preySpecies = [_denizens_algae__WEBPACK_IMPORTED_MODULE_2__[\"default\"]]\n        _denizens_fish__WEBPACK_IMPORTED_MODULE_3__[\"default\"].prototype.preySpeciesArr = [this.algae]\n        _denizens_fishbaby__WEBPACK_IMPORTED_MODULE_1__[\"default\"].prototype.preySpecies = [_denizens_algae__WEBPACK_IMPORTED_MODULE_2__[\"default\"]]\n        _denizens_fishbaby__WEBPACK_IMPORTED_MODULE_1__[\"default\"].prototype.preySpeciesArr = [this.algae]\n        _denizens_shark__WEBPACK_IMPORTED_MODULE_4__[\"default\"].prototype.preySpecies = [_denizens_fish__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _denizens_fishbaby__WEBPACK_IMPORTED_MODULE_1__[\"default\"]]\n        _denizens_shark__WEBPACK_IMPORTED_MODULE_4__[\"default\"].prototype.preySpeciesArr = [this.fishes, this.fishBabies]\n        _denizens_crab__WEBPACK_IMPORTED_MODULE_10__[\"default\"].prototype.preySpecies = [_denizens_fishbaby__WEBPACK_IMPORTED_MODULE_1__[\"default\"]]\n        _denizens_crab__WEBPACK_IMPORTED_MODULE_10__[\"default\"].prototype.preySpeciesArr = [this.fishBabies]\n        _denizens_jellyfish__WEBPACK_IMPORTED_MODULE_13__[\"default\"].prototype.preySpecies = [_denizens_fishbaby__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _denizens_fishegg__WEBPACK_IMPORTED_MODULE_6__[\"default\"]]\n        _denizens_jellyfish__WEBPACK_IMPORTED_MODULE_13__[\"default\"].prototype.preySpeciesArr = [this.fishBabies, this.eggs]\n        _denizens_otter__WEBPACK_IMPORTED_MODULE_14__[\"default\"].prototype.preySpecies = [_denizens_crab__WEBPACK_IMPORTED_MODULE_10__[\"default\"], _denizens_crabbaby__WEBPACK_IMPORTED_MODULE_9__[\"default\"], _denizens_seaurchin__WEBPACK_IMPORTED_MODULE_15__[\"default\"]]\n        _denizens_otter__WEBPACK_IMPORTED_MODULE_14__[\"default\"].prototype.preySpeciesArr = [this.crabs, this.crabBabies, this.seaUrchins]\n    }\n\n    assignSpeciesObjects() {\n        _denizens_fish__WEBPACK_IMPORTED_MODULE_3__[\"default\"].prototype.speciesObject = this.fishes\n        _denizens_fishbaby__WEBPACK_IMPORTED_MODULE_1__[\"default\"].prototype.speciesObject = this.fishBabies\n        _denizens_algae__WEBPACK_IMPORTED_MODULE_2__[\"default\"].prototype.speciesObject = this.algae\n        _denizens_shark__WEBPACK_IMPORTED_MODULE_4__[\"default\"].prototype.speciesObject = this.sharks\n        _denizens_fishegg__WEBPACK_IMPORTED_MODULE_6__[\"default\"].prototype.speciesObject = this.eggs\n        _denizens_effect__WEBPACK_IMPORTED_MODULE_5__[\"default\"].prototype.speciesObject = this.effects\n        _environment_seaweedCluster__WEBPACK_IMPORTED_MODULE_7__[\"default\"].prototype.speciesObject = this.seaweedClusters\n        _denizens_deadCreature__WEBPACK_IMPORTED_MODULE_12__[\"default\"].prototype.speciesObject = this.deadCreatures\n        _denizens_jellyfish__WEBPACK_IMPORTED_MODULE_13__[\"default\"].prototype.speciesObject = this.jellyfish\n        _denizens_crab__WEBPACK_IMPORTED_MODULE_10__[\"default\"].prototype.speciesObject = this.crabs\n        _denizens_crabbaby__WEBPACK_IMPORTED_MODULE_9__[\"default\"].prototype.speciesObject = this.crabBabies\n\n        _denizens_otter__WEBPACK_IMPORTED_MODULE_14__[\"default\"].prototype.speciesObject = this.otters\n        _denizens_seaurchin__WEBPACK_IMPORTED_MODULE_15__[\"default\"].prototype.speciesObject = this.seaUrchins\n    }\n\n    coreloop(){\n\n        // if (this.view.gameFrame % 10 !== 0) return\n        this.deleteDeadDenizens()\n        this.reAssignDataObjs()\n        this.denizensHuntWhenHungry()\n        this.denizensWithMouthsCanFindSomethingElseToEat()\n        this.denizensWithMouthsEatPrey()\n        this.trappersTrapPrey()\n        this.denizensMate()\n        this.fishFleeFromSharks()\n        this.scavengersEatDeadCreatures()\n        this.deleteDeadDenizens()\n        // this.deadCreatureDebugLoop()\n    }\n\n    scavengersEatDeadCreatures() {\n        for (let i = 0; i < this.scavengersArr.length; i++) {\n            let scavenger = this.scavengersArr[i]\n            if (scavenger.scavenging) continue\n            if (scavenger.mating) continue\n\n            let collisionArray = this.view.quadtree.findOverlaps(new _quadtree__WEBPACK_IMPORTED_MODULE_0__.Rectangle(scavenger.pos[0], scavenger.pos[1], scavenger.width, scavenger.height), \"overlaps\", scavenger)\n       \n            for (let j = 0; j < collisionArray.length; j++) {\n\n                if (!(collisionArray[j] instanceof _denizens_deadCreature__WEBPACK_IMPORTED_MODULE_12__[\"default\"])) continue\n                let deadCreature = collisionArray[j]\n                scavenger.scavenging = deadCreature\n                scavenger.speed = 0\n            }\n        }\n    }\n\n    fishFleeFromSharks() {\n        let allFish = [...Object.values(this.fishes), ...Object.values(this.fishBabies)]\n        for (let i = 0; i < allFish.length; i++) {\n            let fish = allFish[i]\n            if (fish.mating) continue\n            if (fish.fleeing) continue\n            this.findNearestPredator(fish, _denizens_shark__WEBPACK_IMPORTED_MODULE_4__[\"default\"])\n        }\n\n    }\n\n    findNearestPredator(prey, predatorSpeciesClass) {\n        let nearbyDenizenArray = this.view.quadtree.findOverlaps(new _quadtree__WEBPACK_IMPORTED_MODULE_0__.Rectangle(prey.pos[0] - 100, prey.pos[1] - 100, 200, 200 ), \"overlaps\", prey)\n        let closePredator;\n        for (const nearbyDenizen of nearbyDenizenArray) {\n            if (nearbyDenizen instanceof predatorSpeciesClass) {\n                closePredator = nearbyDenizen\n                break\n            }\n        }\n\n        if (!closePredator) return\n\n        prey.fleeing = true\n        prey.fleeFromCoords = closePredator.pos\n\n        setTimeout(() => {\n            prey.fleeing = false\n            prey.fleeFromCoords = []\n        }, 1000)\n    }\n\n    unpackAllPreySpecies(denizen) {\n        let allPreyArr = []\n        denizen.preySpeciesArr.forEach((preyObj) => { allPreyArr = allPreyArr.concat(Object.values(preyObj)) })\n        return allPreyArr\n    }\n\n    findNearestFood(predator) {\n        let nearestFoodCords = []\n        let nearestFoundDistance = Infinity\n        let foodId;\n\n        let allPreyArr = this.unpackAllPreySpecies(predator)\n\n        for (const prey of allPreyArr) {\n            let xDistance = Math.abs(predator.pos[0] - prey.pos[0])\n            let yDistance = Math.abs(predator.pos[1] - prey.pos[1])\n\n            if ((xDistance + yDistance) < nearestFoundDistance) {\n                nearestFoundDistance = xDistance + yDistance\n                nearestFoodCords = prey.pos\n                foodId = prey.id\n            }\n        }\n\n        predator.hunting = foodId\n        predator.nearestFoodCords = nearestFoodCords\n    }\n\n    denizensMate() {\n        let matingDenizenArr = Object.values(this.matingDenizensObj)\n        for (let i = 0; i < matingDenizenArr.length; i++) {\n            let bachelorFish = matingDenizenArr[i]\n\n            let collisionArray = this.view.quadtree.queryRange(new _quadtree__WEBPACK_IMPORTED_MODULE_0__.Rectangle(bachelorFish.pos[0], bachelorFish.pos[1], bachelorFish.width, bachelorFish.height), bachelorFish)\n            let foundMate;\n\n            for (const bumpedDenizen of collisionArray) {\n                if (bachelorFish.constructor === bumpedDenizen.constructor &&\n                    bumpedDenizen.seekingMate) {\n                        foundMate = bumpedDenizen\n                        break\n                    }\n            }\n            if (foundMate) {\n                bachelorFish.mate(true)\n                bachelorFish.seekingMate = false\n                delete this.matingDenizensObj[bachelorFish.id]\n\n                foundMate.mate()\n                foundMate.seekingMate = false\n                delete this.matingDenizensObj[foundMate.id]\n            }\n        }\n    }\n\n    denizensWithMouthsCanFindSomethingElseToEat() {\n        for (let i = 0; i < this.predatorsWithMouthsArr.length; i++) {\n            let predator = this.predatorsWithMouthsArr[i]\n            if (!predator.hunting) continue\n\n            let preyStillAlive;\n            for (let j = 0; j < predator.preySpeciesArr.length; j++) {\n                if (predator.hunting in predator.preySpeciesArr[j]) {\n                    preyStillAlive = true  \n                    break\n                }\n            }\n\n            if (preyStillAlive) continue    \n            predator.hunting = false\n            predator.nearestFoodCords = []\n        }\n    }\n\n    denizensHuntWhenHungry() {\n        while (this.hungryDenizenArr.length) {\n            let hungryDenizen = this.hungryDenizenArr.pop()\n            this.findNearestFood(hungryDenizen)\n        }\n    }\n\n\n    denizensWithMouthsEatPrey() {\n        for (let i = 0; i < this.predatorsWithMouthsArr.length; i++) {\n            let predator = this.predatorsWithMouthsArr[i]\n            if (predator.energy > predator.eatFoodThreshold) continue\n            if (predator.mating) continue\n\n            let collisionArray = this.view.quadtree.findOverlaps(new _quadtree__WEBPACK_IMPORTED_MODULE_0__.Rectangle(predator.mouthPos[0], predator.mouthPos[1], predator.mouthSize, predator.mouthSize),\"overlaps\", predator)\n\n            // pretty inneficient -> should look up predators directly\n            for (let j = 0; j < collisionArray.length; j++) {\n                for (let k = 0; k < predator.preySpecies.length; k++) {\n                    if (collisionArray[j] instanceof predator.preySpecies[k])  {\n                        let prey = collisionArray[j]\n\n                        if (prey.dead) continue\n                        prey.dead = true\n                        this.recentlyDeadDenizens.push(prey)\n                        predator.energy = (predator.energy + prey.energyVal) > predator.maxEnergy ? predator.maxEnergy : predator.energy + prey.energyVal\n                        predator.foodEaten++\n                        predator.hunting = false\n                        predator.afterIEatCB()\n                    }\n                }\n            }\n        }\n    }\n\n    deleteDeadDenizens(){\n        while (this.recentlyDeadDenizens.length) {\n            let deadDenizen = this.recentlyDeadDenizens.pop()\n            deadDenizen.clearCallbacksOnDeath()\n            delete deadDenizen.speciesObject[deadDenizen.id]\n        }\n    }\n\n    algaeSpawns() {\n        setTimeout(()=>{\n            this.algaeCount++\n            this.algae[\"Algae\" + this.algaeCount] = new _denizens_algae__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.algaeCount, this.ctx, this.canvas, this.view, this)\n            this.algaeSpawns()\n        }, Math.floor(Math.random() * this.algaeSpawnIncrement) + this.algaeSpawnIncrement)\n    }\n\n    deadCreatureDebugLoop() {\n        for (let i = 0; i < Object.values(this.deadCreatures).length; i++) {\n            let deadc = Object.values(this.deadCreatures)[i]\n            let collisionArray = this.view.quadtree.queryRange(new _quadtree__WEBPACK_IMPORTED_MODULE_0__.Rectangle(deadc.pos[0], deadc.pos[1], deadc.width, deadc.height), deadc)\n        }\n    }\n\n\n    tankPopulator(objnum, className, options) {\n\n        let denizenObj = {}\n\n        while (objnum > 0) {\n            denizenObj[className.name + objnum] = new className(objnum, this.ctx, this.canvas, this.view, this, options)\n            objnum--\n        }\n        return denizenObj\n    }\n\n}\n\n//# sourceURL=webpack://jsproj/./src/engine/logic.js?");

/***/ }),

/***/ "./src/engine/pilot.js":
/*!*****************************!*\
  !*** ./src/engine/pilot.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Pilot; }\n/* harmony export */ });\n/* harmony import */ var _intro__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./intro */ \"./src/engine/intro.js\");\n/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view */ \"./src/engine/view.js\");\n\n\n\nclass Pilot {\n    constructor(canvas) {\n        this.ctx = canvas.getContext('2d')\n        this.canvas = canvas\n        this.view = new _view__WEBPACK_IMPORTED_MODULE_1__[\"default\"](canvas)\n        this.intro = new _intro__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas)\n        \n        this.animate()\n\n    }\n\n    animate() {\n        // if (!this.intro.simStart) {\n        //     this.intro.animate()\n        // } else {\n        //     this.view.animate()\n        // }\n        this.view.animate()\n        this.ctx.fillStyle = `rgba(255,255,255,1`;\n        this.ctx.font = \"25px Georgia\";\n\n        this.ctx.fillText(`h: ${this.canvas.height}`, 200, 200)\n        this.ctx.fillText(`w :${this.canvas.width}`, 200, 250)\n\n        requestAnimationFrame(this.animate.bind(this))\n    }\n\n}\n\n//# sourceURL=webpack://jsproj/./src/engine/pilot.js?");

/***/ }),

/***/ "./src/engine/quadtree.js":
/*!********************************!*\
  !*** ./src/engine/quadtree.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Rectangle\": function() { return /* binding */ Rectangle; },\n/* harmony export */   \"default\": function() { return /* binding */ Quadtree; }\n/* harmony export */ });\n\nclass Quadtree {\n    constructor(bounds, capacity, view) {\n        this.bounds = bounds;\n        this.capacity = capacity;\n        this.denizens = [];\n        this.nodes = [];\n        this.ctx = view.ctx\n        this.view = view\n    }\n\n\n    draw(){\n        this.ctx.fillStyle = 'rgba(255,0,0,.5)';\n        this.ctx.fillRect(this.bounds.x + this.view.offset[0], this.bounds.y + this.view.offset[1], this.bounds.width, 2)\n        this.ctx.fillRect(this.bounds.x + this.view.offset[0], this.bounds.y + this.view.offset[1], 2, this.bounds.height)\n        for (const node of this.nodes) {\n            node.draw()\n        }\n    }\n\n    insert(denizen, level=0) {\n        if (level > 1000) console.log(denizen)\n        if (this.nodes.length) {\n            for (const node of this.nodes) {\n                if (node.insert(denizen, level + 1)) {\n                    return true;\n                }\n            }\n        }\n        \n        if (!this.bounds.contains(denizen)) {\n            return false;\n        }\n\n        if (this.denizens.length < this.capacity) {\n            this.denizens.push(denizen);\n            return true;\n        }\n\n        if (!this.nodes.length) {\n            this.subdivide();\n        }\n\n        for (const node of this.nodes) {\n            if (node.insert(denizen, level + 1)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    subdivide() {\n        const x = this.bounds.x;\n        const y = this.bounds.y;\n        const halfWidth = this.bounds.width / 2;\n        const halfHeight = this.bounds.height / 2;\n\n        const nw = new Quadtree(new Rectangle(x, y, halfWidth, halfHeight), this.capacity, this.view);\n        const ne = new Quadtree(new Rectangle(x + halfWidth, y, halfWidth, halfHeight), this.capacity, this.view);\n        const sw = new Quadtree(new Rectangle(x, y + halfHeight, halfWidth, halfHeight), this.capacity, this.view);\n        const se = new Quadtree(new Rectangle(x + halfWidth, y + halfHeight, halfWidth, halfHeight), this.capacity, this.view);\n\n        this.nodes = [nw, ne, sw, se];\n\n        for (const denizen of this.denizens) {\n            for (const node of this.nodes) {\n                node.insert(denizen);\n            }\n        }\n\n        this.denizens = [];\n    }\n\n    queryType(denizenClass, debugbool) {\n        const foundDenizens = [];\n\n        for (const denizen of this.denizens) {\n            if (denizen.constructor === denizenClass) {\n                foundDenizens.push(denizen);\n            }\n        }\n\n        for (const node of this.nodes) {\n            foundDenizens.push(...node.queryType(denizenClass));\n        }\n\n        if (debugbool) {\n            foundDenizens.forEach((denizen)=>{\n                this.view.ctx.fillRect(denizen.pos[0] + this.view.offset[0], denizen.pos[1] + this.view.offset[1], denizen.width, denizen.height)\n            })\n        }\n\n        return foundDenizens;\n    }\n\n    queryRange(range, opDenizen) {\n        const foundDenizens = [];\n\n    \n        if (!this.bounds.intersects(range)) {\n            return foundDenizens;\n        }\n\n        for (const denizen of this.denizens) {\n            if (range.contains(denizen) && opDenizen.id !== denizen.id) {\n                foundDenizens.push(denizen);\n            }\n        }\n\n\n        for (const node of this.nodes) {\n            foundDenizens.push(...node.queryRange(range, opDenizen));\n        }\n\n        return foundDenizens;\n    }\n\n    findOverlaps(range, type, opDenizen) {\n        if (!opDenizen) console.log(range, type, opDenizen)\n        const foundDenizens = [];\n\n        if (!this.bounds.intersects(range)) {\n            return foundDenizens;\n        }\n\n        for (const denizen of this.denizens) {\n            if (opDenizen.id !== denizen.id && range[type](denizen)) {\n                foundDenizens.push(denizen);\n            }\n        }\n\n\n        for (const node of this.nodes) {\n            foundDenizens.push(...node.findOverlaps(range, type, opDenizen));\n        }\n\n        return foundDenizens;\n    }\n}\n\nclass Rectangle {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    overlaps(denizen) {\n        let recA = { left: this.x, right: this.x + this.width, top: this.y, bottom: this.y + this.height }\n        let recB = { left: denizen.pos[0], right: denizen.pos[0] + denizen.width, top: denizen.pos[1], bottom: denizen.pos[1] + denizen.height }\n        return this.recOverlapCheck(recA, recB) || this.recOverlapCheck(recB, recA)\n    }\n\n    fullyOverlaps(denizen) {\n        let recA = { left: this.x, right: this.x + this.width, top: this.y, bottom: this.y + this.height }\n        let recB = { left: denizen.pos[0], right: denizen.pos[0] + denizen.width, top: denizen.pos[1], bottom: denizen.pos[1] + denizen.height }\n        return this.rectFullyInside(recA, recB) || this.rectFullyInside(recB, recA)\n    }\n\n\n    recOverlapCheck(a, b) {\n        return ((b.left <= a.right) && (b.right >= a.left) && (b.top <= a.bottom) && (b.bottom >= a.top))\n    }\n\n    rectFullyInside(a, b) {\n        return (a.left >= b.left && a.right <= b.right && a.top >= b.top && a.bottom <= b.bottom);\n    }\n\n\n    contains(denizen) {\n        let [x, y] = denizen.pos\n        return (\n            x >= this.x &&\n            x <= this.x + this.width &&\n            y >= this.y &&\n            y <= this.y + this.height\n        );\n    }\n\n    intersects(range, view) {\n\n        // if (view) {\n        //     // view.ctx.globalAlpha = .1;\n        //     // view.ctx.fillStyle = 'rgba(255,0,0,.1)';\n        //     // view.ctx.fillRect(this.x + view.offset[0], this.y + view.offset[1], this.width, this.height)\n        //     // view.ctx.globalAlpha = 1;\n\n        //     // console.log({ x: range.x + view.offset[0], y: range.y + view.offset[1], width: range.width, height: range.height })\n        //     view.ctx.globalAlpha = .1;\n        //     view.ctx.fillStyle = 'rgba(0,200,255,.1)';\n        //     view.ctx.fillRect(range.x + view.offset[0], range.y + view.offset[1], range.width, range.height)\n        //     view.ctx.globalAlpha = 1;\n        // }\n\n\n        return !(\n            range.x - range.width > this.x + this.width ||\n            range.x + range.width < this.x - this.width ||\n            range.y - range.height > this.y + this.height ||\n            range.y + range.height < this.y - this.height\n        );\n    }\n}\n\n//# sourceURL=webpack://jsproj/./src/engine/quadtree.js?");

/***/ }),

/***/ "./src/engine/textbox.js":
/*!*******************************!*\
  !*** ./src/engine/textbox.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TextBox; }\n/* harmony export */ });\n\n\nclass TextBox {\n    constructor(ctx, canvas, view, logic, text) {\n        this.ctx = ctx\n        this.canvas = canvas\n        this.view = view\n        this.logic = logic\n        this.text = text\n\n        this.startTextAtX = 100\n        this.startTextAtY = 100\n        this.leading = 50\n        this.indexTracker = 0\n        this.totalLines = 1\n\n        this.textBoxInnerMargin = 25\n        this.textBoxOuterMargin = 100\n\n        this.font = 24\n\n        this.bottomLimitOfText = this.canvas.height - this.textBoxInnerMargin - this.textBoxOuterMargin\n\n    }\n\n    recalculateBounds() {\n        this.bottomLimitOfText = this.canvas.height - this.textBoxInnerMargin - this.textBoxOuterMargin\n    }\n\n    coreloop() {\n        this.ctx.fillStyle = `rgba(0,0,0,.9)`;\n        this.ctx.fillRect(this.textBoxOuterMargin, this.textBoxOuterMargin, this.canvas.width - this.textBoxOuterMargin * 2, this.canvas.height - this.textBoxOuterMargin * 2)\n\n        this.textParser()\n        this.recalculateBounds()\n        this.totalLines = 1\n        this.indexTracker = 0\n    }\n\n    textParser() {\n        let textArr = this.text.split(\" \")\n        let printSent = \"\"\n        let checkSent = \"\"\n\n        this.ctx.fillStyle = `rgba(255,255,255,1)`;\n        this.ctx.font = `${this.font}px serif`;\n\n\n        while (this.indexTracker < textArr.length) {\n\n            for (let i = this.indexTracker; i < textArr.length; i++) {\n                let word = textArr[i]\n                checkSent += word\n\n                if (this.ctx.measureText(checkSent).width > this.canvas.width - (this.textBoxOuterMargin * 2) - (this.textBoxInnerMargin * 2) || i === textArr.length - 1) {\n                    //wow...\n                    if (this.ctx.measureText(checkSent).fontBoundingBoxAscent + this.startTextAtY + (this.leading * this.totalLines) > this.bottomLimitOfText) {\n                        this.font -= 2\n                        this.leading -= 5\n                    }\n\n\n\n                    if (i === textArr.length - 1 && this.ctx.measureText(checkSent + word).width < this.canvas.width - (this.textBoxOuterMargin * 2) - (this.textBoxInnerMargin * 2)) {\n                        printSent += word\n                    } else {\n                        this.ctx.fillText(word, this.startTextAtX + this.textBoxInnerMargin, this.startTextAtY + this.leading * (this.totalLines + 1))\n                    }\n\n\n                    this.ctx.fillText(printSent, this.startTextAtX + this.textBoxInnerMargin, this.startTextAtY + this.leading * this.totalLines)\n                    this.totalLines += 1\n\n                    printSent = \"\"\n                    checkSent = \"\"\n\n                    if (i === textArr.length - 1) {\n                        this.indexTracker = i + 1\n                        if (this.ctx.measureText(checkSent).fontBoundingBoxAscent + this.startTextAtY + (this.leading * this.totalLines) < this.canvas.height * .6) {\n                            this.font += 2\n                            this.leading += 5\n                        }\n                    } else {\n                        this.indexTracker = i\n                    }\n\n                    break\n                }\n\n                printSent += word\n\n                checkSent += \" \"\n                printSent += \" \"\n            }\n\n        }\n\n    }\n\n\n\n}\n\n//# sourceURL=webpack://jsproj/./src/engine/textbox.js?");

/***/ }),

/***/ "./src/engine/utils.js":
/*!*****************************!*\
  !*** ./src/engine/utils.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"miniRandomizer\": function() { return /* binding */ miniRandomizer; },\n/* harmony export */   \"mix\": function() { return /* binding */ mix; },\n/* harmony export */   \"rand\": function() { return /* binding */ rand; }\n/* harmony export */ });\n\n\n\nconst rand = (floor, ceil) => {\n    if (!ceil) return Math.floor(Math.random() * floor)\n    return Math.floor(Math.random() * (ceil - floor)) + floor + 1\n}\n\nconst miniRandomizer = () => {\n    //to prevent pos collisions in the quad tree - if more than bucket limit share exact same pos, it recurses and breaks\n    return Math.floor(Math.random() * 1000) / 1000\n}\n\nconst tester = (ceil, floor) => {\n    let resArr = []\n\n    for (let i=0; i < 1000; i++) {\n        resArr.push(rand(ceil, floor))\n    }\n    return [Math.min(...resArr), Math.max(...resArr)]\n\n}\n\n\n// some base class\nclass BaseClass { }\n// SocialNetworkMixin\nconst floater = (superclass) => class extends superclass {\n    \n}\n\nclass MixinBuilder {\n    constructor(superclass) {\n        this.superclass = superclass;\n    }\n    with(...mixins) {\n        return mixins.reduce((c, mixin) => mixin(c), this.superclass);\n    }\n}\n\nconst mix = (superclass) => new MixinBuilder(superclass);\n\n// class Facebook extends mix(BaseClass).with(SocialNetwork, AdProvider) { }\n\n\n//# sourceURL=webpack://jsproj/./src/engine/utils.js?");

/***/ }),

/***/ "./src/engine/view.js":
/*!****************************!*\
  !*** ./src/engine/view.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ View; }\n/* harmony export */ });\n/* harmony import */ var _logic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logic */ \"./src/engine/logic.js\");\n/* harmony import */ var _quadtree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quadtree */ \"./src/engine/quadtree.js\");\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./input */ \"./src/engine/input.js\");\n\n\n\n\nclass View {\n\n    constructor(canvas) {\n        this.canvas = canvas\n        this.ctx = canvas.getContext('2d')\n        this.background = new Image()\n        this.background.src = './dist/art/background.jpeg'\n\n        this.arenaCoef = 2\n        this.arenaHeight = 666 * this.arenaCoef\n        this.arenaWidth = 1000 * this.arenaCoef\n        // this.backgroundPos = [-this.arenaWidth/3, -this.arenaHeight/3]\n        this.backgroundPos = [(this.canvas.width / 2) - (this.arenaWidth / 2), (this.canvas.height / 2) - (this.arenaHeight / 2),]\n        this.offset = [(this.canvas.width / 2) - (this.arenaWidth / 2), (this.canvas.height / 2) - (this.arenaHeight / 2),]\n\n        this.logic = new _logic__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.ctx, this.canvas, this)\n        this.input = new _input__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this)\n\n        this.allDenizensArr = [\n            this.logic.fishes, \n            this.logic.fishBabies, \n            this.logic.algae, \n            this.logic.eggs, \n            this.logic.sharks, \n            this.logic.effects, \n            this.logic.turtles,\n            this.logic.seaweedClusters, \n            this.logic.crabs, \n            this.logic.deadCreatures, \n            this.logic.crabBabies, \n            this.logic.jellyfish, \n            this.logic.rocks, \n            this.logic.otters, \n            this.logic.seaUrchins\n        ]\n        \n        this.allDenizensinQuadArr = [\n            this.logic.fishes, \n            this.logic.fishBabies, \n            this.logic.algae, \n            this.logic.eggs, \n            this.logic.sharks, \n            this.logic.effects, \n            this.logic.crabs, \n            this.logic.deadCreatures, \n            this.logic.jellyfish, \n            this.logic.seaUrchins\n        ]\n\n        this.bounds = new _quadtree__WEBPACK_IMPORTED_MODULE_1__.Rectangle(0, 0, this.arenaWidth, this.arenaHeight)\n        this.quadtree = {}\n        this.ecosystemGraphData = []\n\n        this.populateQuad()\n        this.debugging = false\n        this.gameFrame = 0\n\n        this.introFader = 1\n\n        this.textBox = null\n\n\n\n    }\n\n    populateQuad() {\n        this.quadtree = new _quadtree__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.bounds, 6, this);\n        this.allDenizensinQuadArr.forEach((denizenObj)=>{\n            Object.values(denizenObj).forEach((denizen) => {\n                this.quadtree.insert(denizen)\n            })\n        })\n\n    }\n\n    fadeInStart() {\n        this.ctx.fillStyle = `rgba(0,0,0,${this.introFader})`;\n        this.introFader -= .005\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n        this.ctx.fillStyle = `rgba(255,255,255,${this.introFader})`;\n        this.ctx.fillText(\"mobile test 2\", this.canvas.width / 2, this.canvas.height / 2)\n\n    }\n\n    drawInfoText() {\n        \n        if (this.textBox) this.textBox.coreloop()\n    }\n\n\n    animate() {\n        this.gameFrame++ \n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        // if (this.gameFrame % 100 === 0) this.populateQuad() \n        this.populateQuad() \n        this.updateCamera(this.input.keys) \n        this.drawBackround()\n        // this.drawTextBox()\n        this.denizenCoreloop()\n        this.drawInfoText()\n        if (this.gameFrame % 10 === 0) this.captureEcosystemGraphData()\n        this.drawEcosystemGraph()\n        if (this.introFader > 0) this.fadeInStart()\n        this.logic.coreloop()\n        if (this.debugging) this.quadtree.draw()\n    }\n\n    drawBackround() {\n        this.ctx.drawImage(this.background, this.backgroundPos[0], this.backgroundPos[1], this.arenaWidth, this.arenaHeight)\n        this.ctx.fillStyle = 'rgba(0,0,0,.3)';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n    }\n\n    captureEcosystemGraphData() { \n\n        if (this.ecosystemGraphData.length > 100) this.ecosystemGraphData.shift()\n\n        let totalDenizens = Object.values(this.logic.algae).length + Object.values(this.logic.fishes).length + Object.values(this.logic.fishBabies).length + Object.values(this.logic.crabs).length + + Object.values(this.logic.crabBabies).length\n        const graphData = {\n            totalDenizens,\n            algaeRatio: (Object.values(this.logic.algae).length / totalDenizens),\n            fishRatio: (Object.values(this.logic.fishes).length + Object.values(this.logic.fishBabies).length) / totalDenizens,\n            crabRatio: (Object.values(this.logic.crabs).length + Object.values(this.logic.crabBabies).length) / totalDenizens\n        }\n        \n        this.ecosystemGraphData.push(graphData)\n        \n    }\n\n    drawEcosystemGraph() {\n        this.ctx.fillStyle = 'rgba(0,0,0,.3)';\n        this.ctx.fillRect(this.canvas.width - 220, 10, 202, 220) \n\n        for (let i = 0; i < this.ecosystemGraphData.length; i++) {\n            let { algaeRatio, fishRatio, crabRatio } = this.ecosystemGraphData[i]\n            let nextStartHeight = 10\n\n            this.ctx.fillStyle = 'rgba(0,255,0,.1)';\n            nextStartHeight += this.drawEcoLine(i, nextStartHeight, algaeRatio)\n\n            this.ctx.fillStyle = 'rgba(0,255,255,.1)';\n            nextStartHeight += this.drawEcoLine(i, nextStartHeight, fishRatio)\n\n            this.ctx.fillStyle = 'rgba(255,0,0,.1)';\n            nextStartHeight += this.drawEcoLine(i, nextStartHeight, crabRatio)\n        }\n    }\n\n    drawEcoLine(i, nextStartHeight, ratio) {\n        this.ctx.fillRect(this.canvas.width - 220 + (i * 2), nextStartHeight, 2, 220 * ratio)\n        return 220 * ratio\n    }\n\n    drawTextBox() {\n        this.ctx.fillStyle = 'rgba(0,0,0,.3)';\n        this.ctx.fillRect(10, 10, 150, 250)\n\n        this.ctx.fillStyle = 'rgba(250,110,0,1)';\n        this.ctx.font = \"24px serif\";\n        this.ctx.fillText(`Algae: ${Object.values(this.logic.algae).length}`, 25, 50)\n        this.ctx.fillText(`Fishes: ${Object.values(this.logic.fishes).length + Object.values(this.logic.fishBabies).length}`, 25, 80)\n        this.ctx.fillText(`Eggs: ${Object.values(this.logic.eggs).length}`, 25, 110)\n        this.ctx.fillText(`Sharks: ${Object.values(this.logic.sharks).length}`, 25, 140)\n        this.ctx.fillText(`Crabs: ${Object.values(this.logic.crabs).length + Object.values(this.logic.crabBabies).length}`, 25, 170)\n        this.ctx.fillText(`Jellies: ${Object.values(this.logic.jellyfish).length}`, 25, 200)\n        this.ctx.fillText(`Corpses: ${Object.values(this.logic.deadCreatures).length}`, 25, 230)\n\n    }\n\n\n    updateCamera(input) {\n        let xSpeed = 0;\n        let ySpeed = 0;\n\n        if (input.includes('ArrowRight')) {\n            xSpeed = -(1.5)\n        } else if (input.includes('ArrowLeft')) {\n            xSpeed = (1.5)\n        } else {\n            xSpeed = (0)\n        }\n\n        if (input.includes('ArrowUp')) {\n            ySpeed = (1.5)\n        } else if (input.includes('ArrowDown')) {\n            ySpeed = -(1.5)\n        } else {\n            ySpeed = (0)\n        }\n\n        this.offset[0] += xSpeed;\n        this.offset[1] += ySpeed;\n\n        if (this.offset[0] >= 0) this.offset[0] = 0;\n        if (this.offset[0] <= (-this.arenaWidth + this.canvas.width)) this.offset[0] = (-this.arenaWidth + this.canvas.width);\n        if (this.offset[1] >= 0) this.offset[1] = 0;\n        if (this.offset[1] <= (-this.arenaHeight + this.canvas.height)) this.offset[1] = (-this.arenaHeight+ this.canvas.height);\n\n        this.backgroundPos[0] = this.offset[0];\n        this.backgroundPos[1] = this.offset[1];\n    }\n\n    denizenCoreloop() {\n        this.allDenizensArr.forEach((denizenObj)=>{\n            Object.values(denizenObj).forEach((denizen) => {\n                denizen.coreloop()\n            })\n        })\n    }\n}\n\n\n\n\n//# sourceURL=webpack://jsproj/./src/engine/view.js?");

/***/ }),

/***/ "./src/environment/rock.js":
/*!*********************************!*\
  !*** ./src/environment/rock.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _denizens_denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../denizens/denizen */ \"./src/denizens/denizen.js\");\n/* harmony import */ var _engine_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../engine/utils */ \"./src/engine/utils.js\");\n\n\nclass Rock extends _denizens_denizen__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic) {\n        super(ctx, canvas, view, logic)\n        this.id = \"Rock\" + id\n        this.img = new Image()\n        this.rockKeys = [\"small_rock\", \"small_rock_2\", \"small_green\", \"med_rock\", \"med_rock_2\", \"rock_pile\", \"tall_med\", \"boulder_1\", \"boulder_2\", \"arch\"]\n        this.rockRoll = this.rockKeys[(0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(this.rockKeys.length)]\n\n        this.width;\n        this.height;\n        this.rockSelector()\n        this.pos = [Math.floor(Math.random() * this.arenaWidth - (this.width / 2)), this.arenaHeight - this.height]\n    }\n\n    coreloop(){\n        this.draw()\n    }\n\n    draw() {\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n    }\n\n    \n    rockSelector() {\n        switch (this.rockRoll) {\n            case \"small_rock\":\n                this.img.src = './dist/art/rocks/small_rock.png'\n                this.width = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(20,50)\n                this.height = this.width * .4\n                break\n\n            case \"small_rock_2\":\n                this.img.src = './dist/art/rocks/small_rock_2.png'\n                this.width = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(10, 50)\n                this.height = this.width * .7\n                break\n\n            case \"small_green\":\n                this.img.src = './dist/art/rocks/small_rock_green.png'\n                this.width = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(20, 60)\n                this.height = this.width * 1.1\n                break\n\n            case \"med_rock\":\n                this.img.src = './dist/art/rocks/med_rock.png'\n                this.width = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(40, 80)\n                this.height = this.width * .6\n                break\n\n            case \"med_rock_2\":\n                this.img.src = './dist/art/rocks/med_rock_2.png'\n                this.width = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(20, 60)\n                this.height = this.width * 1.1\n                break\n\n\n            case \"rock_pile\":\n                this.img.src = './dist/art/rocks/rock_pile.png'\n                this.width = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(20, 60)\n                this.height = this.width * .9\n                break\n\n            case \"tall_med\":\n                this.img.src = './dist/art/rocks/tall_med.png'\n                this.width = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(15, 35)\n                this.height = this.width * 2\n                break\n\n            case \"boulder_1\":\n                this.img.src = './dist/art/rocks/boulder_1.png'\n                this.width = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(40, 120)\n                this.height = this.width * .5\n                break\n\n            case \"boulder_2\":\n                this.img.src = './dist/art/rocks/boulder_2.png'\n                this.width = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(20, 100)\n                this.height = this.width *.65\n                break\n\n            case \"arch\":\n                this.img.src = './dist/art/rocks/arch.png'\n                this.width = (0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(100, 140)\n                this.height = this.width * .45\n                break\n        }\n    }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Rock);\n\n//# sourceURL=webpack://jsproj/./src/environment/rock.js?");

/***/ }),

/***/ "./src/environment/seaweed.js":
/*!************************************!*\
  !*** ./src/environment/seaweed.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Seaweed; }\n/* harmony export */ });\n/* harmony import */ var _denizens_denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../denizens/denizen */ \"./src/denizens/denizen.js\");\n/* harmony import */ var _engine_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../engine/utils */ \"./src/engine/utils.js\");\n\n\n\nclass Seaweed extends _denizens_denizen__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(id, ctx, canvas, view, logic, {pos}) {\n        super(ctx, canvas, view, logic)\n        this.id = id\n        this.width = 60 \n        this.height = 80 \n        this.sizeCoef = Math.floor(Math.random() * 15)\n        this.pos = [pos[0] + Math.floor(Math.random() * 10), (this.arenaHeight - this.height) - ((id - 1) * 25)]\n        // this.pos[0] = Math.floor(Math.random() * this.arenaWidth - this.width/2)\n        // this.pos[1] = this.arenaHeight - this.height - Math.floor(Math.random() * 200)\n\n        this.img = new Image()\n        this.img.src = './dist/art/seaweed.png'\n        this.aniStateNames = [\"sway1\", \"sway2\", \"swish\", \"swoosh\"]\n        this.animationState = this.aniStateNames[Math.floor(Math.random() * 2)]\n        this.animations = [];\n\n        //what if seaweed clusters could grow? and then be eaten by something over time.\n\n        this.animationStates = [\n            { name: \"sway1\", frames: 8},\n            { name: \"sway2\", frames: 8},\n            { name: \"swish\", frames: 8 },\n            { name: \"swoosh\", frames: 8 }\n        ];\n\n        this.gameFrame = Math.floor(Math.random() * 100)\n        this.staggerFrame = 40\n\n        this.animationFramesSetter()\n        this.placeUrchin()\n    }\n\n    placeUrchin() {\n        if ((0,_engine_utils__WEBPACK_IMPORTED_MODULE_1__.rand)(10)) return\n\n        this.logic.spawnDenizen(this)\n    }\n\n\n    animationFramesSetter() {\n        this.animationStates.forEach((spriteState,index) => {\n            let frames = {\n                loc: [],\n            }\n            for (let j = 0; j < spriteState.frames; j++) {\n                let positionX = j * this.width;\n                let positionY = index * this.height;\n                frames.loc.push({ x: positionX, y: positionY });\n            }\n            this.animations[spriteState.name] = frames;\n        });\n    }\n\n    coreloop() {\n\n        let position = Math.floor((this.gameFrame / this.staggerFrame) % this.animations[this.animationState].loc.length)\n        let frameX = this.width * position;\n        let frameY = this.animations[this.animationState].loc[position].y\n        this.ctx.drawImage(this.img, frameX, frameY, this.width, this.height, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width + this.sizeCoef, this.height + this.sizeCoef)\n        this.gameFrame++\n    }\n\n\n    \n\n    \n}\n\n\n\n\n\n//# sourceURL=webpack://jsproj/./src/environment/seaweed.js?");

/***/ }),

/***/ "./src/environment/seaweedCluster.js":
/*!*******************************************!*\
  !*** ./src/environment/seaweedCluster.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SeaweedCluster; }\n/* harmony export */ });\n/* harmony import */ var _seaweed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./seaweed */ \"./src/environment/seaweed.js\");\n\n\nclass SeaweedCluster {\n    constructor(id, ctx, canvas, view, logic) {\n        this.id = id\n        this.ctx = ctx\n        this.canvas = canvas\n        this.view = view\n        this.logic = logic\n\n        this.pos = [Math.floor( Math.random() * this.view.arenaWidth), 0]\n        this.seaweedCount = Math.floor(Math.random() * 15) + 10\n        this.seaweed = this.logic.tankPopulator(this.seaweedCount, _seaweed__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {pos: this.pos})\n        this.tallestPoint = this.tallestPointFinder()\n    }\n\n    tallestPointFinder() {\n        return Object.values(this.seaweed)[0].pos[1] + 10\n    }\n\n    coreloop() {\n        Object.values(this.seaweed).forEach((seaweed) => {\n            seaweed.coreloop()\n        }) \n        this.ctx.fillStyle = 'rgba(255,0,0,1)';\n        if (this.view.debugging) this.ctx.fillRect(this.pos[0] + 30 + this.view.offset[0], this.tallestPoint + this.view.offset[1], 10,10)\n    }\n\n\n \n\n}\n\n\n\n//# sourceURL=webpack://jsproj/./src/environment/seaweedCluster.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _engine_intro__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine/intro */ \"./src/engine/intro.js\");\n/* harmony import */ var _engine_pilot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./engine/pilot */ \"./src/engine/pilot.js\");\n/* harmony import */ var _engine_quadtree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./engine/quadtree */ \"./src/engine/quadtree.js\");\n/* harmony import */ var _engine_view__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./engine/view */ \"./src/engine/view.js\");\n\n\n\n\n\nconst canvas = document.getElementById('canvas1')\ncanvas.height = window.innerHeight\ncanvas.width = window.innerWidth\n\n\nlet ctx = canvas.getContext('2d')\n\nlet pilot = new _engine_pilot__WEBPACK_IMPORTED_MODULE_1__[\"default\"](canvas)\n\n\n//mobile size\n//w: 980\n//h: 1793\n\ncanvas.addEventListener(\"mousemove\", (e) => {\n    if (pilot.view.input.mouseIsDownAt) {\n        pilot.view.input.dragScreen([e.x, e.y])\n    }\n})\n\ncanvas.addEventListener(\"touchmove\", (e) => {\n    let touch = e.touches[0];\n    pilot.view.input.mouseIsDownAt = [e.clientX, e.clientY]\n    let mouseEvent = new MouseEvent(\"mousemove\", {\n        clientX: touch.clientX,\n        clientY: touch.clientY\n    });\n    canvas.dispatchEvent(mouseEvent);\n}, false);\n\ncanvas.addEventListener(\"mousedown\", (e) => {\n    pilot.view.input.mouseIsDownAt = [e.x, e.y]\n})\n\ncanvas.addEventListener(\"click\", (e) => {\n    pilot.view.input.mouseIsDownAt = false\n\n    let collisionArr = pilot.view.quadtree.findOverlaps(new _engine_quadtree__WEBPACK_IMPORTED_MODULE_2__.Rectangle(e.x - pilot.view.offset[0], e.y - pilot.view.offset[1],1,1),\"overlaps\",{id:null})\n    // if (pilot.intro) {\n    //     pilot.intro.simTransition = true\n    // } else {\n    // }\n})\n\n\n\nwindow.addEventListener(\"resize\", (e)=> {\n    canvas.height = e.currentTarget.innerHeight\n    canvas.width = e.currentTarget.innerWidth\n})\n\n//# sourceURL=webpack://jsproj/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;