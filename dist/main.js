/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/engine/intro.js":
/*!*****************************!*\
  !*** ./src/engine/intro.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Intro; }\n/* harmony export */ });\n\r\nclass Intro {\r\n    constructor(canvas, mobile) {\r\n        this.canvas = canvas\r\n        this.ctx = this.canvas.getContext('2d')\r\n        this.background = new Image()\r\n        this.background.src = './dist/art/intro.png'\r\n        this.bgHeight = 648\r\n        this.bgWidth = 1440\r\n        this.xOffset = 0\r\n        this.yOffset = 0\r\n        this.looptracker = 0 \r\n        this.simTransition = false\r\n        this.simStart = false\r\n        this.fader = 0\r\n        this.mobile = mobile\r\n        this.textMargin = mobile ? 25 : 100\r\n\r\n        this.sequenceStep = 0\r\n        this.fontSize = 42\r\n        this.leading = 50\r\n\r\n        this.animate()\r\n        this.textFader = 1\r\n        this.fadeText = true\r\n        this.fadeTransitionSpeed = .01\r\n\r\n    }\r\n\r\n    animate() {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n        this.updatePos()\r\n        this.drawDynamicBackground()\r\n        this.drawIntroSequence()\r\n        if (this.simTransition) this.simStarter()\r\n    }\r\n\r\n    fadeManger() { \r\n        if (this.textFader > 5) {\r\n            this.textFader = 1\r\n            this.fadeText = true\r\n        }\r\n\r\n        if (this.fadeText) {\r\n            this.textFader -= this.fadeTransitionSpeed\r\n        } else {\r\n            this.textFader += this.fadeTransitionSpeed\r\n        }\r\n\r\n        if (this.textFader < 0) {\r\n            this.sequenceStep++\r\n            this.textFader = 0\r\n            this.fadeText = false\r\n            this.font = 42\r\n        }\r\n    }\r\n\r\n    fontAndLeadingManager(textWidth, centerBool) {\r\n        if (centerBool) {\r\n            if (textWidth > this.canvas.width - this.textMargin * 2) {\r\n                this.fontSize -= 1\r\n                this.leading -= 1\r\n            } else if (textWidth < this.canvas.width - this.textMargin * 3) {\r\n                this.fontSize += 1\r\n                this.leading += 1\r\n            }\r\n        } else {\r\n            if (textWidth > this.canvas.width / 2 + this.textMargin) {\r\n                this.fontSize -= 1\r\n                this.leading -= 1\r\n            } else if (textWidth < this.canvas.width / 2) {\r\n                this.fontSize += 1\r\n                this.leading += 1\r\n            }\r\n        }\r\n    }\r\n\r\n    drawIntroSequence() {\r\n        const centerX = this.canvas.width / 2\r\n        const centerY = this.canvas.height / 2\r\n\r\n        if (this.sequenceStep === 0) {\r\n            this.ctx.fillStyle = `rgba(0,0,0,${this.textFader})`\r\n            this.ctx.font = `${this.fontSize}px Georgia`;\r\n            this.drawText(\"Start\", true)\r\n            \r\n        } else if(this.sequenceStep === 1) {\r\n            this.ctx.fillStyle = `rgba(0,0,0,${this.textFader})`\r\n            this.ctx.font = `${this.fontSize}px Georgia`;\r\n            this.drawText(\"Start\",true)\r\n\r\n            if (this.fadeText) {\r\n                this.textFader -= this.fadeTransitionSpeed\r\n            } else {\r\n                this.textFader += this.fadeTransitionSpeed\r\n            }\r\n\r\n            if (this.textFader < 0) {\r\n                this.sequenceStep++\r\n                this.textFader = 0\r\n                this.fadeText = false\r\n            }\r\n        } else if (this.sequenceStep === 2) {\r\n            this.ctx.font = `${this.fontSize}px Georgia`;\r\n            this.ctx.fillStyle = `rgba(0,0,0,${this.textFader})`\r\n            this.fontAndLeadingManager(this.ctx.measureText(\"Pacific Kelp Forests stretch from Baja California,\").width)\r\n            this.ctx.fillText(\"Pacific Kelp Forests stretch from Baja California,\", this.textMargin, this.textMargin);\r\n            this.ctx.fillText(\"up through the Bering Sea,\", this.textMargin, this.textMargin + this.leading);\r\n            this.ctx.fillText(\"down to the southern coast of Japan.\", this.textMargin, this.textMargin + this.leading * 2);\r\n            this.fadeManger()\r\n        } else if (this.sequenceStep === 3) {\r\n\r\n            this.ctx.font = `${this.fontSize}px Georgia`;\r\n            this.ctx.fillStyle = `rgba(0,0,0,${this.textFader})`\r\n            this.fontAndLeadingManager(this.ctx.measureText(\"and were once teeming with life.\").width)\r\n            this.ctx.fillText(\"These massive marine ecosystems\", this.textMargin, this.textMargin);\r\n            this.ctx.fillText(\"are home to hundreds of species\", this.textMargin, this.textMargin + this.leading);\r\n            this.ctx.fillText(\"and were once teeming with life.\", this.textMargin, this.textMargin + this.leading * 2);\r\n            this.fadeManger()\r\n\r\n        } else if (this.sequenceStep === 4) {\r\n            this.ctx.font = `${this.fontSize}px Georgia`;\r\n            this.ctx.fillStyle = `rgba(0,0,0,${this.textFader})`\r\n            const line1Width = this.ctx.measureText(\"Today, climate change and overfishing\").width\r\n            const line2Width = this.ctx.measureText(\"threaten these incredible biospheres.\").width\r\n            this.fontAndLeadingManager(this.ctx.measureText(line2Width, true))\r\n            this.ctx.fillText(\"Today, climate change and overfishing\", centerX - line1Width/2, centerY - this.leading/2);\r\n            this.ctx.fillText(\"threaten these incredible biospheres.\", centerX - line2Width/2, centerY + this.leading / 2);\r\n            this.fadeManger()\r\n\r\n        } else if (this.sequenceStep === 5) {\r\n\r\n            this.ctx.font = `${this.fontSize}px Georgia`;\r\n            this.ctx.fillStyle = `rgba(0,0,0,${this.textFader})`\r\n            const line1Width = this.ctx.measureText(\"Dive into the hidden\").width\r\n            const line2Width = this.ctx.measureText(\"world of Kelpscape\").width\r\n            this.ctx.fillText(\"Dive into the hidden\", centerX - line1Width / 2, centerY - this.leading / 2);\r\n            this.ctx.fillText(\"world of Kelpscape\", centerX - line2Width / 2, centerY + this.leading / 2);\r\n            this.fadeManger()\r\n            \r\n        } else if (this.sequenceStep === 6) {\r\n\r\n            this.ctx.fillStyle = `rgba(0,0,0,${this.fader})`;\r\n            this.fader += .005\r\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\r\n            if (this.fader > 1) this.sequenceStep += 1\r\n\r\n        } else if (this.sequenceStep === 7) {\r\n            this.ctx.fillStyle = `rgba(0,0,0,${this.fader})`;\r\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\r\n            this.ctx.font = `${this.fontSize * .8}px Georgia`;\r\n            this.ctx.fillStyle = `rgba(255,255,255,${this.textFader})`\r\n            if (this.mobile) {\r\n                const line1Width = this.ctx.measureText(\"Navigate the sea using the touchscreen.\").width\r\n                const line2Width = this.ctx.measureText(\"Click on a denizen to learn more about them.\").width\r\n                this.fontAndLeadingManager(this.ctx.measureText(line2Width, true))\r\n                this.ctx.fillText(\"Navigate the sea using the touchscreen.\", centerX - line1Width / 2, centerY - this.leading);\r\n                this.ctx.fillText(\"Click on a denizen to learn more about them.\", centerX - line2Width / 2, centerY + this.leading);\r\n            } else {\r\n                const line1Width = this.ctx.measureText(\"Use the arrow keys or mouse to move around.\").width\r\n                const line2Width = this.ctx.measureText(\"Click on a denizen to learn more about them.\").width\r\n                this.fontAndLeadingManager(this.ctx.measureText(line2Width, true))\r\n                this.ctx.fillText(\"Use the arrow keys or mouse to move around.\", centerX - line1Width / 2, centerY - this.leading);\r\n                this.ctx.fillText(\"Click on a denizen to learn more about them.\", centerX - line2Width / 2, centerY + this.leading);\r\n            }\r\n            this.fadeManger()\r\n        } else if (this.sequenceStep === 8) {\r\n            this.ctx.fillStyle = `rgba(0,0,0,${this.fader})`;\r\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\r\n            this.simStart = true\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    updatePos() {\r\n        this.looptracker += .5\r\n    }\r\n\r\n    drawText(text, triangleBool) {\r\n        const centerX = this.canvas.width / 2;\r\n        const centerY = this.canvas.height / 2;\r\n\r\n        const textWidth = this.ctx.measureText(text).width;\r\n        const textHeight = 10;\r\n\r\n        const x = centerX - (textWidth / 2);\r\n        const y = centerY + (textHeight / 2);\r\n\r\n        if (triangleBool) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(centerX + 25, centerY + 50);\r\n            this.ctx.lineTo(centerX - 25, centerY + 25);\r\n            this.ctx.lineTo(centerX - 25, centerY + 75);\r\n            this.ctx.fill();\r\n        }\r\n\r\n\r\n        this.ctx.fillText(text, x, y);\r\n    }\r\n\r\n\r\n\r\n    drawDynamicBackground() {\r\n        let scaleFactor = Math.max(this.canvas.width / this.bgWidth, this.canvas.height / this.bgHeight);\r\n        let newWidth = this.bgWidth * scaleFactor;\r\n        let newHeight = this.bgHeight * scaleFactor;\r\n        let x = (this.canvas.width / 2) - (newWidth / 2);\r\n        let y = (this.canvas.height / 2) - (newHeight / 2);\r\n        this.ctx.drawImage(this.background, x + this.looptracker, y, newWidth, newHeight);\r\n\r\n        if (x + this.looptracker >= 0) {\r\n            let secondX = (x + this.looptracker - newWidth)\r\n            this.ctx.drawImage(this.background, secondX + 1, y, newWidth, newHeight);\r\n        } \r\n\r\n        if (x + this.looptracker - newWidth > 0)  {\r\n            this.looptracker = -x + 1\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\n\n//# sourceURL=webpack://jsproj/./src/engine/intro.js?");

/***/ }),

/***/ "./src/engine/pilot.js":
/*!*****************************!*\
  !*** ./src/engine/pilot.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Pilot; }\n/* harmony export */ });\n/* harmony import */ var _intro__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./intro */ \"./src/engine/intro.js\");\n/* harmony import */ var _sound__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sound */ \"./src/engine/sound.js\");\n/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view */ \"./src/engine/view.js\");\n\r\n\r\n\r\n\r\nclass Pilot {\r\n    constructor(canvas,mobile) {\r\n        this.ctx = canvas.getContext('2d')\r\n        this.canvas = canvas\r\n        this.sound = new _sound__WEBPACK_IMPORTED_MODULE_1__[\"default\"]()\r\n        this.view = new _view__WEBPACK_IMPORTED_MODULE_2__[\"default\"](canvas, mobile)\r\n        this.intro = new _intro__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, mobile)\r\n        this.mobile = mobile\r\n\r\n        this.touch = null\r\n        this.collisionArr = null\r\n        this.showIntro = true\r\n        this.touchRect = []\r\n        \r\n        this.animate()\r\n\r\n    }\r\n\r\n    animate() {\r\n        if (this.showIntro) {\r\n            if (this.intro && !this.intro.simStart) {\r\n                this.intro.animate()\r\n            } else {\r\n                this.intro = null\r\n                this.view.animate()\r\n            }\r\n            if (this.sound.kickOffIntroScore) {\r\n                if (this.sound.playingSong.paused) this.sound.playNextTrack()\r\n            }\r\n        } else {\r\n\r\n            this.view.animate()\r\n        }\r\n\r\n        if (this.touchRect.length) {\r\n            this.ctx.fillStyle = `rgba(255,255,255,1`;\r\n            this.ctx.fillRect(this.touchRect[0], this.touchRect[1], this.touchRect[2], this.touchRect[2])\r\n        }\r\n  \r\n        // this.ctx.fillStyle = `rgba(255,255,255,1`;\r\n        // this.ctx.font = \"25px Georgia\";\r\n        // this.ctx.fillText(`t: ${this.touch}`, 200, 200)\r\n        // this.ctx.fillText(`w: ${this.collisionArr}`, 200, 250)\r\n        // this.ctx.fillText(`deploy test 8`, 200, 350)\r\n\r\n\r\n\r\n        requestAnimationFrame(this.animate.bind(this))\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://jsproj/./src/engine/pilot.js?");

/***/ }),

/***/ "./src/engine/quadtree.js":
/*!********************************!*\
  !*** ./src/engine/quadtree.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Rectangle\": function() { return /* binding */ Rectangle; },\n/* harmony export */   \"default\": function() { return /* binding */ Quadtree; }\n/* harmony export */ });\n\nclass Quadtree {\n    constructor(bounds, capacity, view) {\n        this.bounds = bounds;\n        this.capacity = capacity;\n        this.denizens = [];\n        this.nodes = [];\n        this.ctx = view.ctx\n        this.view = view\n    }\n\n\n    draw(){\n        this.ctx.fillStyle = 'rgba(255,0,0,.5)';\n        this.ctx.fillRect(this.bounds.x + this.view.offset[0], this.bounds.y + this.view.offset[1], this.bounds.width, 2)\n        this.ctx.fillRect(this.bounds.x + this.view.offset[0], this.bounds.y + this.view.offset[1], 2, this.bounds.height)\n        for (const node of this.nodes) {\n            node.draw()\n        }\n    }\n\n    insert(denizen, level=0) {\n        if (level > 1000) console.log(denizen)\n        \n        if (!this.bounds.contains(denizen)) {\n            return false;\n        }\n\n        if (this.denizens.length < this.capacity) {\n            this.denizens.push(denizen);\n            return true;\n        }\n\n        if (!this.nodes.length) {\n            this.subdivide();\n        }\n\n        for (const node of this.nodes) {\n            if (node.insert(denizen, level + 1)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    subdivide() {\n        const x = this.bounds.x;\n        const y = this.bounds.y;\n        const halfWidth = this.bounds.width / 2;\n        const halfHeight = this.bounds.height / 2;\n\n        const nw = new Quadtree(new Rectangle(x, y, halfWidth, halfHeight), this.capacity + 1, this.view);\n        const ne = new Quadtree(new Rectangle(x + halfWidth, y, halfWidth, halfHeight), this.capacity + 1, this.view);\n        const sw = new Quadtree(new Rectangle(x, y + halfHeight, halfWidth, halfHeight), this.capacity + 1, this.view);\n        const se = new Quadtree(new Rectangle(x + halfWidth, y + halfHeight, halfWidth, halfHeight), this.capacity + 1, this.view);\n\n        this.nodes = [nw, ne, sw, se];\n\n        for (const denizen of this.denizens) {\n            for (const node of this.nodes) {\n                node.insert(denizen);\n            }\n        }\n\n        this.denizens = [];\n    }\n\n    queryType(denizenClass, debugbool) {\n        const foundDenizens = [];\n\n        for (const denizen of this.denizens) {\n            if (denizen.constructor === denizenClass) {\n                foundDenizens.push(denizen);\n            }\n        }\n\n        for (const node of this.nodes) {\n            foundDenizens.push(...node.queryType(denizenClass));\n        }\n\n        // if (debugbool) {\n        //     foundDenizens.forEach((denizen)=>{\n        //         this.view.ctx.fillRect(denizen.pos[0] + this.view.offset[0], denizen.pos[1] + this.view.offset[1], denizen.width, denizen.height)\n        //     })\n        // }\n\n        return foundDenizens;\n    }\n\n    queryRange(range, type, opDenizen,debugBool) {\n        if (!opDenizen) console.log(range, type, opDenizen)\n        const foundDenizens = [];\n\n        if (!this.bounds.intersects(range)) {\n            return foundDenizens;\n        }\n\n        for (const denizen of this.denizens) {\n            if (opDenizen.id !== denizen.id && range[type](denizen, debugBool)) {\n                foundDenizens.push(denizen);\n            }\n        }\n\n        for (const node of this.nodes) {\n            foundDenizens.push(...node.queryRange(range, type, opDenizen,debugBool));\n        }\n        \n        return foundDenizens;\n    }\n}\n\nclass Rectangle {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    overlaps(denizen) {\n        let recA = { left: this.x, right: this.x + this.width, top: this.y, bottom: this.y + this.height }\n        let recB = { left: denizen.pos[0], right: denizen.pos[0] + denizen.width, top: denizen.pos[1], bottom: denizen.pos[1] + denizen.height }\n        return this.recOverlapCheck(recA, recB) || this.recOverlapCheck(recB, recA)\n    }\n\n    partialOverlap(denizen) {\n        let recA = { left: this.x, right: this.x + this.width, top: this.y, bottom: this.y + this.height }\n        let recB = { left: denizen.pos[0], right: denizen.pos[0] + denizen.width, top: denizen.pos[1], bottom: denizen.pos[1] + denizen.height }\n        return (this.recOverlapCheck(recA, recB) || this.recOverlapCheck(recB, recA) ||\n            this.rectFullyInside(recA, recB) || this.rectFullyInside(recB, recA)\n        )\n    }\n\n    fullyOverlaps(denizen) {\n        let recA = { left: this.x, right: this.x + this.width, top: this.y, bottom: this.y + this.height }\n        let recB = { left: denizen.pos[0], right: denizen.pos[0] + denizen.width, top: denizen.pos[1], bottom: denizen.pos[1] + denizen.height }\n        return this.rectFullyInside(recA, recB) || this.rectFullyInside(recB, recA)\n    }\n\n    recPartialOverlap(a, b) {\n        return ((b.left <= a.left) && (b.right >= a.right) && (b.top <= a.top) && (b.bottom >= a.bottom) || \n            (b.left >= a.left) && (b.right <= a.right) && (b.top >= a.top) && (b.bottom <= a.bottom) \n        )\n    }\n\n    recOverlapCheck(a, b) {\n        return ((b.left <= a.right) && (b.right >= a.left) && (b.top <= a.bottom) && (b.bottom >= a.top))\n    }\n\n    rectFullyInside(a, b) {\n        return (a.left >= b.left && a.right <= b.right && a.top >= b.top && a.bottom <= b.bottom);\n    }\n\n\n    contains(denizen) {\n        let [x, y] = denizen.pos\n        return (\n            x >= this.x &&\n            x <= this.x + this.width &&\n            y >= this.y &&\n            y <= this.y + this.height\n        );\n    }\n\n    intersects(range) {\n        return !(\n            range.x - range.width > this.x + this.width ||\n            range.x + range.width < this.x - this.width ||\n            range.y - range.height > this.y + this.height ||\n            range.y + range.height < this.y - this.height\n        );\n    }\n}\n\n//# sourceURL=webpack://jsproj/./src/engine/quadtree.js?");

/***/ }),

/***/ "./src/engine/sound.js":
/*!*****************************!*\
  !*** ./src/engine/sound.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Sound; }\n/* harmony export */ });\nclass Sound {\n    constructor() {\n        this.allSounds = this.allSoundsObj()\n        this.volume = .5\n        this.kickOffIntroScore = false\n        this.playingSong = false\n        this.songIndexTracker = 0\n    }\n\n    allSoundsObj() {\n        return {\n            intro: { clip: new Audio(\"./dist/sounds/soundtrack/intro.mp3\"), volumePreset: .2 },\n            celestia: { clip: new Audio(\"./dist/sounds/soundtrack/celestia.mp3\"), volumePreset: .2 },\n            wavesTake: { clip: new Audio(\"./dist/sounds/soundtrack/waves_take.mp3\"), volumePreset: .2 },\n        }\n    }\n\n    playNextTrack() {\n        this.songIndexTracker += 1\n        let audiokey = Object.keys(this.allSounds)[this.songIndexTracker % Object.keys(this.allSounds).length] \n        this.playSound(audiokey)\n    }\n\n    playSound(audiokey) {\n        this.allSounds[audiokey].clip.volume = this.volume === 0 ? this.volume : this.allSounds[audiokey].volumePreset || this.volume\n        this.playingSong = this.allSounds[audiokey].clip\n        this.playingSong.play()\n    }\n\n\n    muteAllSounds() {\n        this.volume = 0\n        Object.values(this.allSounds).forEach((soundObj) => {\n            soundObj.clip.volume = 0\n        })\n    }\n\n    unmuteAllSounds() {\n        this.volume = .5\n        Object.values(this.allSounds).forEach((soundObj) => {\n            soundObj.clip.volume = soundObj.volumePreset || this.volume\n        })\n    }\n\n    playIntroScore() {\n        this.playSound(\"intro\")\n        // dont use set timeout, evaluate play and pause on the sound object\n        // will have to continually recheck at other points in the core gameloo\n        this.kickOffIntroScore = true\n    }\n}\n\n//# sourceURL=webpack://jsproj/./src/engine/sound.js?");

/***/ }),

/***/ "./src/engine/view.js":
/*!****************************!*\
  !*** ./src/engine/view.js ***!
  \****************************/
/***/ (function() {

eval("throw new Error(\"Module parse failed: Unexpected token (178:0)\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\n| \\n|     captureEcosystemGraphData() { \\n> =\\n|         // if (this.ecosystemGraphData.length > 100) this.ecosystemGraphData.shift()\\n| \");\n\n//# sourceURL=webpack://jsproj/./src/engine/view.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _engine_intro__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine/intro */ \"./src/engine/intro.js\");\n/* harmony import */ var _engine_pilot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./engine/pilot */ \"./src/engine/pilot.js\");\n/* harmony import */ var _engine_quadtree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./engine/quadtree */ \"./src/engine/quadtree.js\");\n/* harmony import */ var _engine_view__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./engine/view */ \"./src/engine/view.js\");\n\n\n\n\n\nconst canvas = document.getElementById('canvas1')\ncanvas.height = window.innerHeight\ncanvas.width = window.innerWidth\n\n\nconst mobileDetector = () => {\n    return (navigator.userAgent.match(/Android/i)\n        || navigator.userAgent.match(/webOS/i)\n        || navigator.userAgent.match(/iPhone/i)\n        || navigator.userAgent.match(/iPad/i)\n        || navigator.userAgent.match(/iPod/i)\n        || navigator.userAgent.match(/BlackBerry/i)\n        || navigator.userAgent.match(/Windows Phone/i))\n}\n\nconst mobile = mobileDetector()\nlet pilot = new _engine_pilot__WEBPACK_IMPORTED_MODULE_1__[\"default\"](canvas, mobile)\n\n\nconst soundButton = document.getElementById('sound-button')\n\n\nsoundButton.addEventListener(\"click\", (e) => {\n    e.stopPropagation()\n\n    if (soundButton.classList[1] === \"sound-on\") {\n        soundButton.classList.remove(\"sound-on\")\n        soundButton.classList.add(\"sound-off\")\n        soundButton.innerHTML = `<i class=\"fa-solid fa-volume-xmark\">`\n        pilot.sound.muteAllSounds()\n    } else {\n        soundButton.classList.remove(\"sound-off\")\n        soundButton.classList.add(\"sound-on\")\n        soundButton.innerHTML = `<i class=\"fa-solid fa-volume-high\">`\n        pilot.sound.unmuteAllSounds()\n    }\n\n})\n\nwindow.addEventListener('keydown', e => {\n    if (pilot.sound.kickOffIntroScore) return\n    if(e.code === 'Space') {\n        e.preventDefault();\n        pilot.sound.playIntroScore()\n        pilot.intro.sequenceStep = 1\n    }\n});\n\n\n\ncanvas.addEventListener(\"mousedown\", (e) => {\n    e.preventDefault()\n    pilot.view.input.mouseIsDownAt = [e.x, e.y]\n})\n\ncanvas.addEventListener(\"mousemove\", (e) => {\n    e.preventDefault()\n    if (pilot.view.input.mouseIsDownAt) {\n        pilot.view.input.dragScreen([e.x, e.y])\n    }\n})\n\ncanvas.addEventListener(\"mouseup\", (e) => {\n    e.preventDefault()\n    pilot.view.input.mouseIsDownAt = false\n})\n\n\n\ncanvas.addEventListener(\"click\", (e) => {\n    pilot.view.input.mouseIsDownAt = false\n\n    if (!pilot.sound.kickOffIntroScore && pilot.showIntro) {\n        pilot.sound.playIntroScore()\n        pilot.intro.sequenceStep = 1\n    }\n    \n    if (pilot.intro && !pilot.intro.simStart && pilot.showIntro) return\n\n    if (pilot.view.textBox) {\n        pilot.view.textBox.resetTextBox()\n        pilot.view.textBox = null\n    } else {\n        let collisionArr = pilot.view.quadtree.queryRange(new _engine_quadtree__WEBPACK_IMPORTED_MODULE_2__.Rectangle(e.x - pilot.view.offset[0] - 5, e.y - pilot.view.offset[1] - 5, 10, 10), \"partialOverlap\", { id: null }, true)\n        if (collisionArr.length) {\n            let textBox;\n            for (let i = 0; i < collisionArr.length; i++) {\n                if (collisionArr[i].type !== \"Seaweed\" || i === collisionArr.length - 1 ) {\n                    textBox = collisionArr[i].textBox\n                    break\n                }\n            }\n\n            pilot.view.textBox = textBox\n            pilot.view.fadeInScore = .5\n            pilot.view.showScore = true\n            if (!pilot.view.logic.scoreTrackObj[textBox.type]) {\n                pilot.view.logic.scoreTrackObj[textBox.type] = true\n                pilot.view.logic.score += 1\n                pilot.view.scoreFontSize = 42\n            }\n        }\n    }\n})\n\nwindow.addEventListener(\"resize\", (e) => {\n    canvas.height = e.currentTarget.innerHeight\n    canvas.width = e.currentTarget.innerWidth\n    buttonHider(window.innerWidth)\n})\n\n\nconst buttonHider = (width) => {\n    const gitButton = document.getElementById('github-button')\n    const linkButton = document.getElementById('linkedin-button')\n\n    if (width < 700 || pilot.mobile) { // If media query matches\n        gitButton.classList.add(\"hide\")\n        linkButton.classList.add(\"hide\")\n    } else {\n        gitButton.classList.remove(\"hide\")\n        linkButton.classList.remove(\"hide\")\n    }\n}\n\nbuttonHider()\n\n\ncanvas.addEventListener(\"touchstart\", (e) => {\n    e.preventDefault()\n    let touch = e.touches[0]\n    pilot.view.input.mouseIsDownAt = [touch.clientX, touch.clientY]\n\n    if (!pilot.sound.kickOffIntroScore) {\n        pilot.sound.playIntroScore()\n        pilot.intro.sequenceStep = 1\n    }\n\n    if (pilot.intro && !pilot.intro.simStart && pilot.showIntro) return\n\n\n    if (pilot.view.textBox) {\n        pilot.view.textBox.resetTextBox()\n        pilot.view.textBox = null\n    } else {\n        // pilot.touchRect = [touch.clientX - 25, touch.clientY - 25, 500]\n        let collisionArr = pilot.view.quadtree.queryRange(new _engine_quadtree__WEBPACK_IMPORTED_MODULE_2__.Rectangle(touch.clientX - pilot.view.offset[0] - 25, touch.clientY - pilot.view.offset[1] - 25, 50, 50), \"overlaps\", { id: null }, true)\n        if (collisionArr.length) {\n            let textBox;\n            for (let i = 0; i < collisionArr.length; i++) {\n                if (collisionArr[i].type !== \"Seaweed\" || i === collisionArr.length - 1) {\n                    textBox = collisionArr[i].textBox\n                    break\n                }\n            }\n\n            pilot.view.textBox = textBox\n            pilot.view.fadeInScore = .5\n            pilot.view.showScore = true\n            if (!pilot.view.logic.scoreTrackObj[textBox.type]) {\n                pilot.view.logic.scoreTrackObj[textBox.type] = true\n                pilot.view.logic.score += 1\n                pilot.view.scoreFontSize = 42\n            }\n        }\n    }\n});\n\ncanvas.addEventListener(\"touchmove\", (e) => {\n    e.preventDefault()\n    let touch = e.touches[0]\n    if (pilot.view.input.mouseIsDownAt) {\n        pilot.view.input.dragScreen([touch.clientX, touch.clientY])\n    }\n});\n\ncanvas.addEventListener(\"touchend\", (e) => {\n    e.preventDefault()\n    pilot.view.input.mouseIsDownAt = false\n})\n\n//# sourceURL=webpack://jsproj/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;